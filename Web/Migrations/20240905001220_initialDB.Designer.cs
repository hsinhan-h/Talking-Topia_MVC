// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.Entities;

#nullable disable

namespace Web.Migrations
{
    [DbContext(typeof(TalkingTopiaContext))]
    [Migration("20240905001220_initialDB")]
    partial class initialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web.Entities.ApplyList", b =>
                {
                    b.Property<int>("ApplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplyID")
                        .HasComment("申請Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplyId"));

                    b.Property<DateTime>("ApplyDateTime")
                        .HasColumnType("datetime")
                        .HasComment("申請日期");

                    b.Property<bool>("ApplyStatus")
                        .HasColumnType("bit")
                        .HasComment("申請狀態");

                    b.Property<DateTime?>("ApprovedDateTime")
                        .HasColumnType("datetime")
                        .HasComment("審核通過時間");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("會員Id");

                    b.Property<string>("RejectReason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拒絕原因");

                    b.Property<DateTime?>("UpdateStatusDateTime")
                        .HasColumnType("datetime")
                        .HasComment("更新審核通過時間");

                    b.HasKey("ApplyId")
                        .HasName("PK__ApplyLis__F0687F91F95B14E5");

                    b.HasIndex(new[] { "MemberId" }, "IX_ApplyLists_MemberId");

                    b.ToTable("ApplyLists");

                    b.HasData(
                        new
                        {
                            ApplyId = 1,
                            ApplyDateTime = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6062),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6063),
                            MemberId = 1,
                            UpdateStatusDateTime = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6065)
                        },
                        new
                        {
                            ApplyId = 2,
                            ApplyDateTime = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6067),
                            ApplyStatus = false,
                            MemberId = 2,
                            RejectReason = "Incomplete application",
                            UpdateStatusDateTime = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6069)
                        },
                        new
                        {
                            ApplyId = 3,
                            ApplyDateTime = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6071),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6072),
                            MemberId = 3,
                            UpdateStatusDateTime = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6073)
                        },
                        new
                        {
                            ApplyId = 4,
                            ApplyDateTime = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6075),
                            ApplyStatus = false,
                            MemberId = 4,
                            RejectReason = "Failed verification",
                            UpdateStatusDateTime = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6077)
                        },
                        new
                        {
                            ApplyId = 5,
                            ApplyDateTime = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6079),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6080),
                            MemberId = 5,
                            UpdateStatusDateTime = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6081)
                        },
                        new
                        {
                            ApplyId = 6,
                            ApplyDateTime = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6083),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6084),
                            MemberId = 6,
                            UpdateStatusDateTime = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6085)
                        },
                        new
                        {
                            ApplyId = 7,
                            ApplyDateTime = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6088),
                            ApplyStatus = false,
                            MemberId = 7,
                            RejectReason = "Incorrect details",
                            UpdateStatusDateTime = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6089)
                        },
                        new
                        {
                            ApplyId = 8,
                            ApplyDateTime = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6091),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6092),
                            MemberId = 8,
                            UpdateStatusDateTime = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6093)
                        },
                        new
                        {
                            ApplyId = 9,
                            ApplyDateTime = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6095),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6096),
                            MemberId = 9,
                            UpdateStatusDateTime = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6100)
                        },
                        new
                        {
                            ApplyId = 10,
                            ApplyDateTime = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6102),
                            ApplyStatus = false,
                            MemberId = 10,
                            RejectReason = "Missing documents",
                            UpdateStatusDateTime = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6103)
                        },
                        new
                        {
                            ApplyId = 11,
                            ApplyDateTime = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6106),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6107),
                            MemberId = 11,
                            UpdateStatusDateTime = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6108)
                        },
                        new
                        {
                            ApplyId = 12,
                            ApplyDateTime = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6112),
                            ApplyStatus = false,
                            MemberId = 12,
                            RejectReason = "Not eligible",
                            UpdateStatusDateTime = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6113)
                        },
                        new
                        {
                            ApplyId = 13,
                            ApplyDateTime = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6120),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6121),
                            MemberId = 13,
                            UpdateStatusDateTime = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6125)
                        },
                        new
                        {
                            ApplyId = 14,
                            ApplyDateTime = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6127),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6128),
                            MemberId = 14,
                            UpdateStatusDateTime = new DateTime(2024, 9, 10, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6129)
                        },
                        new
                        {
                            ApplyId = 15,
                            ApplyDateTime = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6131),
                            ApplyStatus = false,
                            MemberId = 15,
                            RejectReason = "Failed interview",
                            UpdateStatusDateTime = new DateTime(2024, 9, 11, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6132)
                        },
                        new
                        {
                            ApplyId = 16,
                            ApplyDateTime = new DateTime(2024, 9, 10, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6134),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 9, 11, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6135),
                            MemberId = 16,
                            UpdateStatusDateTime = new DateTime(2024, 9, 12, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6136)
                        },
                        new
                        {
                            ApplyId = 17,
                            ApplyDateTime = new DateTime(2024, 9, 11, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6138),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 9, 12, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6139),
                            MemberId = 17,
                            UpdateStatusDateTime = new DateTime(2024, 9, 13, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6140)
                        },
                        new
                        {
                            ApplyId = 18,
                            ApplyDateTime = new DateTime(2024, 9, 12, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6142),
                            ApplyStatus = false,
                            MemberId = 18,
                            RejectReason = "Incorrect documentation",
                            UpdateStatusDateTime = new DateTime(2024, 9, 14, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6144)
                        },
                        new
                        {
                            ApplyId = 19,
                            ApplyDateTime = new DateTime(2024, 9, 13, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6250),
                            ApplyStatus = true,
                            ApprovedDateTime = new DateTime(2024, 9, 14, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6251),
                            MemberId = 19,
                            UpdateStatusDateTime = new DateTime(2024, 9, 15, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6252)
                        },
                        new
                        {
                            ApplyId = 20,
                            ApplyDateTime = new DateTime(2024, 9, 14, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6254),
                            ApplyStatus = false,
                            MemberId = 20,
                            RejectReason = "Unverified information",
                            UpdateStatusDateTime = new DateTime(2024, 9, 16, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6255)
                        });
                });

            modelBuilder.Entity("Web.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("預約Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2")
                        .HasComment("預約上課日期");

                    b.Property<short>("BookingTime")
                        .HasColumnType("smallint")
                        .HasComment("預約上課時間");

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasComment("課程Id");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasComment("預約學生Id");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("更新時間");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__73951AEDF4836C80");

                    b.HasIndex(new[] { "CourseId" }, "IX_Bookings_CourseId");

                    b.HasIndex(new[] { "StudentId" }, "IX_Bookings_StudentId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BookingDate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6294),
                            BookingTime = (short)900,
                            Cdate = new DateTime(2024, 8, 21, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6296),
                            CourseId = 1,
                            StudentId = 1,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6301)
                        },
                        new
                        {
                            BookingId = 2,
                            BookingDate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6303),
                            BookingTime = (short)1100,
                            Cdate = new DateTime(2024, 8, 22, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6304),
                            CourseId = 2,
                            StudentId = 2,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6305)
                        },
                        new
                        {
                            BookingId = 3,
                            BookingDate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6307),
                            BookingTime = (short)1400,
                            Cdate = new DateTime(2024, 8, 23, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6310),
                            CourseId = 3,
                            StudentId = 3,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6311)
                        },
                        new
                        {
                            BookingId = 4,
                            BookingDate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6313),
                            BookingTime = (short)1500,
                            Cdate = new DateTime(2024, 8, 24, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6314),
                            CourseId = 4,
                            StudentId = 4,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6315)
                        },
                        new
                        {
                            BookingId = 5,
                            BookingDate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6317),
                            BookingTime = (short)1600,
                            Cdate = new DateTime(2024, 8, 25, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6318),
                            CourseId = 5,
                            StudentId = 5,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6319)
                        },
                        new
                        {
                            BookingId = 6,
                            BookingDate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6321),
                            BookingTime = (short)1000,
                            Cdate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6322),
                            CourseId = 6,
                            StudentId = 6,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6323)
                        },
                        new
                        {
                            BookingId = 7,
                            BookingDate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6325),
                            BookingTime = (short)900,
                            Cdate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6326),
                            CourseId = 7,
                            StudentId = 7,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6327)
                        },
                        new
                        {
                            BookingId = 8,
                            BookingDate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6328),
                            BookingTime = (short)1100,
                            Cdate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6330),
                            CourseId = 8,
                            StudentId = 8,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6331)
                        },
                        new
                        {
                            BookingId = 9,
                            BookingDate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6332),
                            BookingTime = (short)1400,
                            Cdate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6333),
                            CourseId = 9,
                            StudentId = 9,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6334)
                        },
                        new
                        {
                            BookingId = 10,
                            BookingDate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6336),
                            BookingTime = (short)1500,
                            Cdate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6337),
                            CourseId = 10,
                            StudentId = 10,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6338)
                        },
                        new
                        {
                            BookingId = 11,
                            BookingDate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6340),
                            BookingTime = (short)1600,
                            Cdate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6341),
                            CourseId = 11,
                            StudentId = 11,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6342)
                        },
                        new
                        {
                            BookingId = 12,
                            BookingDate = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6343),
                            BookingTime = (short)1000,
                            Cdate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6344),
                            CourseId = 12,
                            StudentId = 12,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6345)
                        },
                        new
                        {
                            BookingId = 13,
                            BookingDate = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6347),
                            BookingTime = (short)900,
                            Cdate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6348),
                            CourseId = 13,
                            StudentId = 13,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6349)
                        },
                        new
                        {
                            BookingId = 14,
                            BookingDate = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6354),
                            BookingTime = (short)1100,
                            Cdate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6355),
                            CourseId = 14,
                            StudentId = 14,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6356)
                        },
                        new
                        {
                            BookingId = 15,
                            BookingDate = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6358),
                            BookingTime = (short)1400,
                            Cdate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6359),
                            CourseId = 15,
                            StudentId = 15,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6360)
                        },
                        new
                        {
                            BookingId = 16,
                            BookingDate = new DateTime(2024, 9, 10, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6361),
                            BookingTime = (short)1500,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6363),
                            CourseId = 16,
                            StudentId = 16,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6363)
                        },
                        new
                        {
                            BookingId = 17,
                            BookingDate = new DateTime(2024, 9, 11, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6365),
                            BookingTime = (short)1600,
                            Cdate = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6366),
                            CourseId = 17,
                            StudentId = 17,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6367)
                        },
                        new
                        {
                            BookingId = 18,
                            BookingDate = new DateTime(2024, 9, 12, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6369),
                            BookingTime = (short)1000,
                            Cdate = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6370),
                            CourseId = 18,
                            StudentId = 18,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6371)
                        },
                        new
                        {
                            BookingId = 19,
                            BookingDate = new DateTime(2024, 9, 13, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6372),
                            BookingTime = (short)900,
                            Cdate = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6373),
                            CourseId = 19,
                            StudentId = 19,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6374)
                        },
                        new
                        {
                            BookingId = 20,
                            BookingDate = new DateTime(2024, 9, 14, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6376),
                            BookingTime = (short)1100,
                            Cdate = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6377),
                            CourseId = 20,
                            StudentId = 20,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6378)
                        },
                        new
                        {
                            BookingId = 21,
                            BookingDate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6380),
                            BookingTime = (short)1200,
                            Cdate = new DateTime(2024, 8, 21, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6381),
                            CourseId = 21,
                            StudentId = 21,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6382)
                        },
                        new
                        {
                            BookingId = 22,
                            BookingDate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6383),
                            BookingTime = (short)1300,
                            Cdate = new DateTime(2024, 8, 22, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6384),
                            CourseId = 22,
                            StudentId = 22,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6385)
                        },
                        new
                        {
                            BookingId = 23,
                            BookingDate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6387),
                            BookingTime = (short)900,
                            Cdate = new DateTime(2024, 8, 23, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6388),
                            CourseId = 23,
                            StudentId = 23,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6389)
                        },
                        new
                        {
                            BookingId = 24,
                            BookingDate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6394),
                            BookingTime = (short)1100,
                            Cdate = new DateTime(2024, 8, 24, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6395),
                            CourseId = 24,
                            StudentId = 24,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6396)
                        },
                        new
                        {
                            BookingId = 25,
                            BookingDate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6398),
                            BookingTime = (short)1400,
                            Cdate = new DateTime(2024, 8, 25, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6399),
                            CourseId = 25,
                            StudentId = 25,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6400)
                        },
                        new
                        {
                            BookingId = 26,
                            BookingDate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6401),
                            BookingTime = (short)1500,
                            Cdate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6403),
                            CourseId = 26,
                            StudentId = 26,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6403)
                        },
                        new
                        {
                            BookingId = 27,
                            BookingDate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6405),
                            BookingTime = (short)1600,
                            Cdate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6406),
                            CourseId = 27,
                            StudentId = 27,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6407)
                        },
                        new
                        {
                            BookingId = 28,
                            BookingDate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6409),
                            BookingTime = (short)1000,
                            Cdate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6410),
                            CourseId = 28,
                            StudentId = 28,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6411)
                        },
                        new
                        {
                            BookingId = 29,
                            BookingDate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6412),
                            BookingTime = (short)1200,
                            Cdate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6414),
                            CourseId = 29,
                            StudentId = 29,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6415)
                        },
                        new
                        {
                            BookingId = 30,
                            BookingDate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6416),
                            BookingTime = (short)1400,
                            Cdate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6417),
                            CourseId = 30,
                            StudentId = 30,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6418)
                        });
                });

            modelBuilder.Entity("Web.Entities.Coupon", b =>
                {
                    b.Property<int>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("優惠折扣Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<string>("CouponCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("折扣代碼");

                    b.Property<string>("CouponName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength()
                        .HasComment("優惠折扣名稱");

                    b.Property<int?>("Discount")
                        .HasColumnType("int")
                        .HasComment("折扣");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int")
                        .HasComment("折扣方式");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime")
                        .HasComment("折扣到期日");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否有效");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("更新時間");

                    b.HasKey("CouponId")
                        .HasName("PK__Coupons__384AF1BAE1D06BB9");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            CouponId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5782),
                            CouponCode = "WELCOME10",
                            CouponName = "Welcome10",
                            Discount = 10,
                            DiscountType = 1,
                            ExpirationDate = new DateTime(2024, 10, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5777),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5783)
                        },
                        new
                        {
                            CouponId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5789),
                            CouponCode = "SUMMER20",
                            CouponName = "SummerSale",
                            Discount = 20,
                            DiscountType = 2,
                            ExpirationDate = new DateTime(2024, 11, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5787),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5789)
                        },
                        new
                        {
                            CouponId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5793),
                            CouponCode = "FALL15",
                            CouponName = "FallSavings",
                            Discount = 15,
                            DiscountType = 1,
                            ExpirationDate = new DateTime(2024, 12, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5792),
                            IsActive = false,
                            Udate = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5794)
                        },
                        new
                        {
                            CouponId = 4,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5798),
                            CouponCode = "WINTER25",
                            CouponName = "WinterDeal",
                            Discount = 25,
                            DiscountType = 2,
                            ExpirationDate = new DateTime(2025, 1, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5797),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5799)
                        },
                        new
                        {
                            CouponId = 5,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5806),
                            CouponCode = "SPRING30",
                            CouponName = "SpringSave",
                            Discount = 30,
                            DiscountType = 1,
                            ExpirationDate = new DateTime(2025, 2, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5802),
                            IsActive = false,
                            Udate = new DateTime(2024, 9, 10, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5807)
                        },
                        new
                        {
                            CouponId = 6,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5810),
                            CouponCode = "HOLIDAY50",
                            CouponName = "Holiday50",
                            Discount = 50,
                            DiscountType = 2,
                            ExpirationDate = new DateTime(2025, 3, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5809),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 11, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5811)
                        },
                        new
                        {
                            CouponId = 7,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5815),
                            CouponCode = "NEWYEAR15",
                            CouponName = "NewYear15",
                            Discount = 15,
                            DiscountType = 1,
                            ExpirationDate = new DateTime(2025, 4, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5814),
                            IsActive = false,
                            Udate = new DateTime(2024, 9, 12, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5816)
                        },
                        new
                        {
                            CouponId = 8,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5819),
                            CouponCode = "CYBER20",
                            CouponName = "CyberMonday",
                            Discount = 20,
                            DiscountType = 2,
                            ExpirationDate = new DateTime(2025, 5, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5818),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 13, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5820)
                        },
                        new
                        {
                            CouponId = 9,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5824),
                            CouponCode = "BLACK30",
                            CouponName = "BlackFriday",
                            Discount = 30,
                            DiscountType = 1,
                            ExpirationDate = new DateTime(2025, 6, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5823),
                            IsActive = false,
                            Udate = new DateTime(2024, 9, 14, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5825)
                        },
                        new
                        {
                            CouponId = 10,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5828),
                            CouponCode = "WELCOME5",
                            CouponName = "WelcomeBack",
                            Discount = 5,
                            DiscountType = 2,
                            ExpirationDate = new DateTime(2025, 7, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5827),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 15, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5829)
                        },
                        new
                        {
                            CouponId = 11,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5833),
                            CouponCode = "SCHOOL25",
                            CouponName = "BackToSchool",
                            Discount = 25,
                            DiscountType = 1,
                            ExpirationDate = new DateTime(2025, 8, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5832),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 16, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5834)
                        },
                        new
                        {
                            CouponId = 12,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5837),
                            CouponCode = "EARLY10",
                            CouponName = "EarlyBird",
                            Discount = 10,
                            DiscountType = 2,
                            ExpirationDate = new DateTime(2025, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5836),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 17, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5838)
                        },
                        new
                        {
                            CouponId = 13,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5842),
                            CouponCode = "FLASH50",
                            CouponName = "FlashSale",
                            Discount = 50,
                            DiscountType = 1,
                            ExpirationDate = new DateTime(2025, 10, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5840),
                            IsActive = false,
                            Udate = new DateTime(2024, 9, 18, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5843)
                        },
                        new
                        {
                            CouponId = 14,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5849),
                            CouponCode = "NEWCUST20",
                            CouponName = "NewCustomer",
                            Discount = 20,
                            DiscountType = 2,
                            ExpirationDate = new DateTime(2025, 11, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5848),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 19, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5850)
                        },
                        new
                        {
                            CouponId = 15,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5853),
                            CouponCode = "LOYALTY10",
                            CouponName = "LoyaltyReward",
                            Discount = 10,
                            DiscountType = 1,
                            ExpirationDate = new DateTime(2025, 12, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5852),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 20, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5854)
                        },
                        new
                        {
                            CouponId = 16,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5858),
                            CouponCode = "REFERRAL15",
                            CouponName = "ReferralBonus",
                            Discount = 15,
                            DiscountType = 2,
                            ExpirationDate = new DateTime(2026, 1, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5857),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 21, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5858)
                        },
                        new
                        {
                            CouponId = 17,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5862),
                            CouponCode = "SUMMER10",
                            CouponName = "SummerSpecial",
                            Discount = 10,
                            DiscountType = 1,
                            ExpirationDate = new DateTime(2026, 2, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5861),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 22, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5862)
                        },
                        new
                        {
                            CouponId = 18,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5866),
                            CouponCode = "WINTER20",
                            CouponName = "WinterWonder",
                            Discount = 20,
                            DiscountType = 2,
                            ExpirationDate = new DateTime(2026, 3, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5865),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 23, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5867)
                        },
                        new
                        {
                            CouponId = 19,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5870),
                            CouponCode = "SPRING25",
                            CouponName = "SpringBlossom",
                            Discount = 25,
                            DiscountType = 1,
                            ExpirationDate = new DateTime(2026, 4, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5869),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 24, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5871)
                        },
                        new
                        {
                            CouponId = 20,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5874),
                            CouponCode = "AUTUMN15",
                            CouponName = "AutumnLeaves",
                            Discount = 15,
                            DiscountType = 2,
                            ExpirationDate = new DateTime(2026, 5, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5873),
                            IsActive = true,
                            Udate = new DateTime(2024, 9, 25, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5875)
                        });
                });

            modelBuilder.Entity("Web.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("課程Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasComment("課程類別Id");

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<short>("CoursesStatus")
                        .HasColumnType("smallint")
                        .HasComment("課程審核狀態");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("課程詳細描述");

                    b.Property<decimal>("FiftyMinUnitPrice")
                        .HasColumnType("money")
                        .HasComment("50分鐘價");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit")
                        .HasComment("是否顯示");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("課程副標題");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasComment("科目Id");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("影片封面");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("課程標題");

                    b.Property<int>("TutorId")
                        .HasColumnType("int")
                        .HasComment("學生Id");

                    b.Property<decimal>("TwentyFiveMinUnitPrice")
                        .HasColumnType("money")
                        .HasComment("25分鐘價");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("修改時間");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("影片路徑");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__C92D71A7F51F70E3");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Courses_CategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4727),
                            CoursesStatus = (short)1,
                            Description = "適合初學者的英文課程",
                            FiftyMinUnitPrice = 90m,
                            IsEnabled = true,
                            SubTitle = "從零開始學英文",
                            SubjectId = 1,
                            ThumbnailUrl = "https://example.com/courses/english.jpg",
                            Title = "基礎英文",
                            TutorId = 1,
                            TwentyFiveMinUnitPrice = 50m,
                            VideoUrl = "https://example.com/courses/english_intro.mp4"
                        },
                        new
                        {
                            CourseId = 2,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4733),
                            CoursesStatus = (short)1,
                            Description = "基礎日語語法和詞彙",
                            FiftyMinUnitPrice = 100m,
                            IsEnabled = true,
                            SubTitle = "日語學習的基礎",
                            SubjectId = 2,
                            ThumbnailUrl = "https://example.com/courses/japanese.jpg",
                            Title = "日語入門",
                            TutorId = 2,
                            TwentyFiveMinUnitPrice = 60m,
                            VideoUrl = "https://example.com/courses/japanese_intro.mp4"
                        },
                        new
                        {
                            CourseId = 3,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4741),
                            CoursesStatus = (short)1,
                            Description = "全面學習中文語法",
                            FiftyMinUnitPrice = 120m,
                            IsEnabled = true,
                            SubTitle = "掌握中文語法",
                            SubjectId = 3,
                            ThumbnailUrl = "https://example.com/courses/chinese.jpg",
                            Title = "中文語法",
                            TutorId = 3,
                            TwentyFiveMinUnitPrice = 70m,
                            VideoUrl = "https://example.com/courses/chinese_intro.mp4"
                        },
                        new
                        {
                            CourseId = 4,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4746),
                            CoursesStatus = (short)1,
                            Description = "提高德語口語能力",
                            FiftyMinUnitPrice = 110m,
                            IsEnabled = true,
                            SubTitle = "學習德語會話技巧",
                            SubjectId = 4,
                            ThumbnailUrl = "https://example.com/courses/german.jpg",
                            Title = "德語會話",
                            TutorId = 4,
                            TwentyFiveMinUnitPrice = 65m,
                            VideoUrl = "https://example.com/courses/german_intro.mp4"
                        },
                        new
                        {
                            CourseId = 5,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4756),
                            CoursesStatus = (short)1,
                            Description = "提升法語閱讀能力",
                            FiftyMinUnitPrice = 95m,
                            IsEnabled = true,
                            SubTitle = "學習法語閱讀理解",
                            SubjectId = 5,
                            ThumbnailUrl = "https://example.com/courses/french.jpg",
                            Title = "法語閱讀",
                            TutorId = 5,
                            TwentyFiveMinUnitPrice = 55m,
                            VideoUrl = "https://example.com/courses/french_intro.mp4"
                        },
                        new
                        {
                            CourseId = 6,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4761),
                            CoursesStatus = (short)1,
                            Description = "提高西班牙語寫作能力",
                            FiftyMinUnitPrice = 100m,
                            IsEnabled = true,
                            SubTitle = "掌握西班牙語寫作技巧",
                            SubjectId = 6,
                            ThumbnailUrl = "https://example.com/courses/spanish.jpg",
                            Title = "西班牙語寫作",
                            TutorId = 6,
                            TwentyFiveMinUnitPrice = 60m,
                            VideoUrl = "https://example.com/courses/spanish_intro.mp4"
                        },
                        new
                        {
                            CourseId = 7,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4765),
                            CoursesStatus = (short)1,
                            Description = "從頭開始學習HTML和CSS",
                            FiftyMinUnitPrice = 125m,
                            IsEnabled = true,
                            SubTitle = "學習網頁開發基礎",
                            SubjectId = 7,
                            ThumbnailUrl = "https://example.com/courses/html_css.jpg",
                            Title = "HTML/CSS 基礎",
                            TutorId = 7,
                            TwentyFiveMinUnitPrice = 75m,
                            VideoUrl = "https://example.com/courses/html_css_intro.mp4"
                        },
                        new
                        {
                            CourseId = 8,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4769),
                            CoursesStatus = (short)1,
                            Description = "學習JavaScript語法和應用",
                            FiftyMinUnitPrice = 140m,
                            IsEnabled = true,
                            SubTitle = "JavaScript 編程基礎",
                            SubjectId = 8,
                            ThumbnailUrl = "https://example.com/courses/javascript.jpg",
                            Title = "JavaScript 編程",
                            TutorId = 8,
                            TwentyFiveMinUnitPrice = 85m,
                            VideoUrl = "https://example.com/courses/javascript_intro.mp4"
                        },
                        new
                        {
                            CourseId = 9,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4774),
                            CoursesStatus = (short)1,
                            Description = "深入學習C#編程",
                            FiftyMinUnitPrice = 150m,
                            IsEnabled = true,
                            SubTitle = "掌握C#的進階技巧",
                            SubjectId = 9,
                            ThumbnailUrl = "https://example.com/courses/csharp.jpg",
                            Title = "C# 進階",
                            TutorId = 9,
                            TwentyFiveMinUnitPrice = 90m,
                            VideoUrl = "https://example.com/courses/csharp_intro.mp4"
                        },
                        new
                        {
                            CourseId = 10,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4778),
                            CoursesStatus = (short)1,
                            Description = "從零開始學習SQL",
                            FiftyMinUnitPrice = 130m,
                            IsEnabled = true,
                            SubTitle = "學習SQL語法和資料庫操作",
                            SubjectId = 10,
                            ThumbnailUrl = "https://example.com/courses/sql.jpg",
                            Title = "SQL 資料庫",
                            TutorId = 10,
                            TwentyFiveMinUnitPrice = 80m,
                            VideoUrl = "https://example.com/courses/sql_intro.mp4"
                        },
                        new
                        {
                            CourseId = 11,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4849),
                            CoursesStatus = (short)1,
                            Description = "從頭開始學習Python編程",
                            FiftyMinUnitPrice = 140m,
                            IsEnabled = true,
                            SubTitle = "掌握Python的基礎知識",
                            SubjectId = 11,
                            ThumbnailUrl = "https://example.com/courses/python.jpg",
                            Title = "Python 入門",
                            TutorId = 11,
                            TwentyFiveMinUnitPrice = 85m,
                            VideoUrl = "https://example.com/courses/python_intro.mp4"
                        },
                        new
                        {
                            CourseId = 12,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4854),
                            CoursesStatus = (short)1,
                            Description = "從零開始學習Java語言",
                            FiftyMinUnitPrice = 150m,
                            IsEnabled = true,
                            SubTitle = "Java編程的入門課程",
                            SubjectId = 12,
                            ThumbnailUrl = "https://example.com/courses/java.jpg",
                            Title = "Java 基礎",
                            TutorId = 12,
                            TwentyFiveMinUnitPrice = 90m,
                            VideoUrl = "https://example.com/courses/java_intro.mp4"
                        },
                        new
                        {
                            CourseId = 13,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4861),
                            CoursesStatus = (short)1,
                            Description = "提升數學基礎知識",
                            FiftyMinUnitPrice = 100m,
                            IsEnabled = true,
                            SubTitle = "學習數學的基本概念",
                            SubjectId = 13,
                            ThumbnailUrl = "https://example.com/courses/math.jpg",
                            Title = "數學基礎",
                            TutorId = 13,
                            TwentyFiveMinUnitPrice = 60m,
                            VideoUrl = "https://example.com/courses/math_intro.mp4"
                        },
                        new
                        {
                            CourseId = 14,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4866),
                            CoursesStatus = (short)1,
                            Description = "物理學基礎知識",
                            FiftyMinUnitPrice = 110m,
                            IsEnabled = true,
                            SubTitle = "學習物理的基本理論",
                            SubjectId = 14,
                            ThumbnailUrl = "https://example.com/courses/physics.jpg",
                            Title = "物理入門",
                            TutorId = 14,
                            TwentyFiveMinUnitPrice = 65m,
                            VideoUrl = "https://example.com/courses/physics_intro.mp4"
                        },
                        new
                        {
                            CourseId = 15,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4870),
                            CoursesStatus = (short)1,
                            Description = "全面了解化學基礎知識",
                            FiftyMinUnitPrice = 120m,
                            IsEnabled = true,
                            SubTitle = "學習化學的基本概念",
                            SubjectId = 15,
                            ThumbnailUrl = "https://example.com/courses/chemistry.jpg",
                            Title = "化學基礎",
                            TutorId = 15,
                            TwentyFiveMinUnitPrice = 70m,
                            VideoUrl = "https://example.com/courses/chemistry_intro.mp4"
                        },
                        new
                        {
                            CourseId = 16,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4875),
                            CoursesStatus = (short)1,
                            Description = "歷史事件和背景的深入分析",
                            FiftyMinUnitPrice = 125m,
                            IsEnabled = true,
                            SubTitle = "深入了解歷史事件",
                            SubjectId = 16,
                            ThumbnailUrl = "https://example.com/courses/history.jpg",
                            Title = "歷史研究",
                            TutorId = 16,
                            TwentyFiveMinUnitPrice = 75m,
                            VideoUrl = "https://example.com/courses/history_intro.mp4"
                        },
                        new
                        {
                            CourseId = 17,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4881),
                            CoursesStatus = (short)1,
                            Description = "全面了解地理學的基礎",
                            FiftyMinUnitPrice = 110m,
                            IsEnabled = true,
                            SubTitle = "學習地理的基本知識",
                            SubjectId = 17,
                            ThumbnailUrl = "https://example.com/courses/geography.jpg",
                            Title = "地理概論",
                            TutorId = 17,
                            TwentyFiveMinUnitPrice = 65m,
                            VideoUrl = "https://example.com/courses/geography_intro.mp4"
                        },
                        new
                        {
                            CourseId = 18,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4886),
                            CoursesStatus = (short)1,
                            Description = "深入學習生物學的基本概念",
                            FiftyMinUnitPrice = 120m,
                            IsEnabled = true,
                            SubTitle = "深入理解生物學",
                            SubjectId = 18,
                            ThumbnailUrl = "https://example.com/courses/biology.jpg",
                            Title = "生物學基礎",
                            TutorId = 18,
                            TwentyFiveMinUnitPrice = 70m,
                            VideoUrl = "https://example.com/courses/biology_intro.mp4"
                        },
                        new
                        {
                            CourseId = 19,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4896),
                            CoursesStatus = (short)1,
                            Description = "深入練習英語會話和詞彙",
                            FiftyMinUnitPrice = 180m,
                            IsEnabled = true,
                            SubTitle = "提升英語會話能力",
                            SubjectId = 1,
                            ThumbnailUrl = "https://example.com/courses/advanced_english.jpg",
                            Title = "高級英文",
                            TutorId = 19,
                            TwentyFiveMinUnitPrice = 100m,
                            VideoUrl = "https://example.com/courses/advanced_english_intro.mp4"
                        },
                        new
                        {
                            CourseId = 20,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4902),
                            CoursesStatus = (short)1,
                            Description = "提升日語會話和語法能力",
                            FiftyMinUnitPrice = 200m,
                            IsEnabled = true,
                            SubTitle = "提升日語語法和會話技巧",
                            SubjectId = 2,
                            ThumbnailUrl = "https://example.com/courses/advanced_japanese.jpg",
                            Title = "進階日語",
                            TutorId = 20,
                            TwentyFiveMinUnitPrice = 110m,
                            VideoUrl = "https://example.com/courses/advanced_japanese_intro.mp4"
                        },
                        new
                        {
                            CourseId = 21,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4906),
                            CoursesStatus = (short)1,
                            Description = "深入學習中文語法和詞彙",
                            FiftyMinUnitPrice = 220m,
                            IsEnabled = true,
                            SubTitle = "提升中文語法和詞彙",
                            SubjectId = 3,
                            ThumbnailUrl = "https://example.com/courses/advanced_chinese.jpg",
                            Title = "高級中文",
                            TutorId = 21,
                            TwentyFiveMinUnitPrice = 120m,
                            VideoUrl = "https://example.com/courses/advanced_chinese_intro.mp4"
                        },
                        new
                        {
                            CourseId = 22,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4910),
                            CoursesStatus = (short)1,
                            Description = "德語會話和詞彙的深入練習",
                            FiftyMinUnitPrice = 240m,
                            IsEnabled = true,
                            SubTitle = "提升德語會話技巧",
                            SubjectId = 4,
                            ThumbnailUrl = "https://example.com/courses/advanced_german.jpg",
                            Title = "高級德語",
                            TutorId = 22,
                            TwentyFiveMinUnitPrice = 130m,
                            VideoUrl = "https://example.com/courses/advanced_german_intro.mp4"
                        },
                        new
                        {
                            CourseId = 23,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4914),
                            CoursesStatus = (short)1,
                            Description = "法語閱讀和寫作的深入研究",
                            FiftyMinUnitPrice = 230m,
                            IsEnabled = true,
                            SubTitle = "提升法語閱讀和寫作能力",
                            SubjectId = 5,
                            ThumbnailUrl = "https://example.com/courses/advanced_french.jpg",
                            Title = "高級法語",
                            TutorId = 23,
                            TwentyFiveMinUnitPrice = 125m,
                            VideoUrl = "https://example.com/courses/advanced_french_intro.mp4"
                        },
                        new
                        {
                            CourseId = 24,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4919),
                            CoursesStatus = (short)1,
                            Description = "西班牙語寫作和語法的深入練習",
                            FiftyMinUnitPrice = 250m,
                            IsEnabled = true,
                            SubTitle = "提升西班牙語寫作和語法",
                            SubjectId = 6,
                            ThumbnailUrl = "https://example.com/courses/advanced_spanish.jpg",
                            Title = "高級西班牙語",
                            TutorId = 24,
                            TwentyFiveMinUnitPrice = 135m,
                            VideoUrl = "https://example.com/courses/advanced_spanish_intro.mp4"
                        },
                        new
                        {
                            CourseId = 25,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4923),
                            CoursesStatus = (short)1,
                            Description = "高級網頁設計和開發技術",
                            FiftyMinUnitPrice = 270m,
                            IsEnabled = true,
                            SubTitle = "深入學習HTML和CSS技術",
                            SubjectId = 7,
                            ThumbnailUrl = "https://example.com/courses/advanced_html_css.jpg",
                            Title = "高級HTML/CSS",
                            TutorId = 25,
                            TwentyFiveMinUnitPrice = 150m,
                            VideoUrl = "https://example.com/courses/advanced_html_css_intro.mp4"
                        },
                        new
                        {
                            CourseId = 26,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4930),
                            CoursesStatus = (short)1,
                            Description = "JavaScript編程的高級應用和技巧",
                            FiftyMinUnitPrice = 280m,
                            IsEnabled = true,
                            SubTitle = "深入掌握JavaScript編程",
                            SubjectId = 8,
                            ThumbnailUrl = "https://example.com/courses/advanced_javascript.jpg",
                            Title = "高級JavaScript",
                            TutorId = 26,
                            TwentyFiveMinUnitPrice = 160m,
                            VideoUrl = "https://example.com/courses/advanced_javascript_intro.mp4"
                        },
                        new
                        {
                            CourseId = 27,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4935),
                            CoursesStatus = (short)1,
                            Description = "深入掌握C#編程的高級技術",
                            FiftyMinUnitPrice = 300m,
                            IsEnabled = true,
                            SubTitle = "學習C#的高級應用技術",
                            SubjectId = 9,
                            ThumbnailUrl = "https://example.com/courses/advanced_csharp.jpg",
                            Title = "C# 高級應用",
                            TutorId = 27,
                            TwentyFiveMinUnitPrice = 170m,
                            VideoUrl = "https://example.com/courses/advanced_csharp_intro.mp4"
                        },
                        new
                        {
                            CourseId = 28,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4939),
                            CoursesStatus = (short)1,
                            Description = "SQL資料庫管理和優化的高級技術",
                            FiftyMinUnitPrice = 275m,
                            IsEnabled = true,
                            SubTitle = "深入學習SQL資料庫管理",
                            SubjectId = 10,
                            ThumbnailUrl = "https://example.com/courses/advanced_sql.jpg",
                            Title = "SQL 高級資料庫操作",
                            TutorId = 28,
                            TwentyFiveMinUnitPrice = 155m,
                            VideoUrl = "https://example.com/courses/advanced_sql_intro.mp4"
                        },
                        new
                        {
                            CourseId = 29,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4943),
                            CoursesStatus = (short)1,
                            Description = "Python編程的高級應用和數據處理",
                            FiftyMinUnitPrice = 290m,
                            IsEnabled = true,
                            SubTitle = "深入學習Python的高級應用",
                            SubjectId = 11,
                            ThumbnailUrl = "https://example.com/courses/advanced_python.jpg",
                            Title = "Python 高級應用",
                            TutorId = 29,
                            TwentyFiveMinUnitPrice = 165m,
                            VideoUrl = "https://example.com/courses/advanced_python_intro.mp4"
                        },
                        new
                        {
                            CourseId = 30,
                            CategoryId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4947),
                            CoursesStatus = (short)1,
                            Description = "Java編程的高級技術和應用",
                            FiftyMinUnitPrice = 310m,
                            IsEnabled = true,
                            SubTitle = "深入學習Java的高級應用技術",
                            SubjectId = 12,
                            ThumbnailUrl = "https://example.com/courses/advanced_java.jpg",
                            Title = "Java 高級應用",
                            TutorId = 30,
                            TwentyFiveMinUnitPrice = 175m,
                            VideoUrl = "https://example.com/courses/advanced_java_intro.mp4"
                        },
                        new
                        {
                            CourseId = 31,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4951),
                            CoursesStatus = (short)1,
                            Description = "高等數學理論和應用",
                            FiftyMinUnitPrice = 250m,
                            IsEnabled = true,
                            SubTitle = "深入學習數學的高級概念",
                            SubjectId = 13,
                            ThumbnailUrl = "https://example.com/courses/advanced_math.jpg",
                            Title = "高等數學",
                            TutorId = 31,
                            TwentyFiveMinUnitPrice = 140m,
                            VideoUrl = "https://example.com/courses/advanced_math_intro.mp4"
                        },
                        new
                        {
                            CourseId = 32,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4955),
                            CoursesStatus = (short)1,
                            Description = "物理學的高級理論和應用",
                            FiftyMinUnitPrice = 255m,
                            IsEnabled = true,
                            SubTitle = "深入理解物理學的高級理論",
                            SubjectId = 14,
                            ThumbnailUrl = "https://example.com/courses/advanced_physics.jpg",
                            Title = "高等物理",
                            TutorId = 32,
                            TwentyFiveMinUnitPrice = 145m,
                            VideoUrl = "https://example.com/courses/advanced_physics_intro.mp4"
                        },
                        new
                        {
                            CourseId = 33,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5018),
                            CoursesStatus = (short)1,
                            Description = "化學的高級理論和應用",
                            FiftyMinUnitPrice = 260m,
                            IsEnabled = true,
                            SubTitle = "深入理解化學的高級理論",
                            SubjectId = 15,
                            ThumbnailUrl = "https://example.com/courses/advanced_chemistry.jpg",
                            Title = "高等化學",
                            TutorId = 33,
                            TwentyFiveMinUnitPrice = 150m,
                            VideoUrl = "https://example.com/courses/advanced_chemistry_intro.mp4"
                        },
                        new
                        {
                            CourseId = 34,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5026),
                            CoursesStatus = (short)1,
                            Description = "歷史研究的高級技術和方法",
                            FiftyMinUnitPrice = 275m,
                            IsEnabled = true,
                            SubTitle = "深入分析歷史事件和背景",
                            SubjectId = 16,
                            ThumbnailUrl = "https://example.com/courses/advanced_history.jpg",
                            Title = "高等歷史研究",
                            TutorId = 34,
                            TwentyFiveMinUnitPrice = 160m,
                            VideoUrl = "https://example.com/courses/advanced_history_intro.mp4"
                        },
                        new
                        {
                            CourseId = 35,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5030),
                            CoursesStatus = (short)1,
                            Description = "地理學的高級理論和應用",
                            FiftyMinUnitPrice = 265m,
                            IsEnabled = true,
                            SubTitle = "深入理解地理學的高級概念",
                            SubjectId = 17,
                            ThumbnailUrl = "https://example.com/courses/advanced_geography.jpg",
                            Title = "高等地理學",
                            TutorId = 35,
                            TwentyFiveMinUnitPrice = 150m,
                            VideoUrl = "https://example.com/courses/advanced_geography_intro.mp4"
                        },
                        new
                        {
                            CourseId = 36,
                            CategoryId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5034),
                            CoursesStatus = (short)1,
                            Description = "生物學的高級理論和應用",
                            FiftyMinUnitPrice = 275m,
                            IsEnabled = true,
                            SubTitle = "深入理解生物學的高級理論",
                            SubjectId = 18,
                            ThumbnailUrl = "https://example.com/courses/advanced_biology.jpg",
                            Title = "高等生物學",
                            TutorId = 36,
                            TwentyFiveMinUnitPrice = 160m,
                            VideoUrl = "https://example.com/courses/advanced_biology_intro.mp4"
                        },
                        new
                        {
                            CourseId = 37,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5038),
                            CoursesStatus = (short)1,
                            Description = "專業英文寫作的高級技巧",
                            FiftyMinUnitPrice = 320m,
                            IsEnabled = true,
                            SubTitle = "掌握專業英文寫作技巧",
                            SubjectId = 1,
                            ThumbnailUrl = "https://example.com/courses/professional_english.jpg",
                            Title = "專業英文寫作",
                            TutorId = 37,
                            TwentyFiveMinUnitPrice = 180m,
                            VideoUrl = "https://example.com/courses/professional_english_intro.mp4"
                        },
                        new
                        {
                            CourseId = 38,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5042),
                            CoursesStatus = (short)1,
                            Description = "專業日語寫作的高級技巧",
                            FiftyMinUnitPrice = 340m,
                            IsEnabled = true,
                            SubTitle = "掌握專業日語寫作技巧",
                            SubjectId = 2,
                            ThumbnailUrl = "https://example.com/courses/professional_japanese.jpg",
                            Title = "專業日語寫作",
                            TutorId = 38,
                            TwentyFiveMinUnitPrice = 190m,
                            VideoUrl = "https://example.com/courses/professional_japanese_intro.mp4"
                        },
                        new
                        {
                            CourseId = 39,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5047),
                            CoursesStatus = (short)1,
                            Description = "專業中文寫作的高級技巧",
                            FiftyMinUnitPrice = 360m,
                            IsEnabled = true,
                            SubTitle = "掌握專業中文寫作技巧",
                            SubjectId = 3,
                            ThumbnailUrl = "https://example.com/courses/professional_chinese.jpg",
                            Title = "專業中文寫作",
                            TutorId = 39,
                            TwentyFiveMinUnitPrice = 200m,
                            VideoUrl = "https://example.com/courses/professional_chinese_intro.mp4"
                        },
                        new
                        {
                            CourseId = 40,
                            CategoryId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5051),
                            CoursesStatus = (short)1,
                            Description = "專業德語寫作的高級技巧",
                            FiftyMinUnitPrice = 380m,
                            IsEnabled = true,
                            SubTitle = "掌握專業德語寫作技巧",
                            SubjectId = 4,
                            ThumbnailUrl = "https://example.com/courses/professional_german.jpg",
                            Title = "專業德語寫作",
                            TutorId = 40,
                            TwentyFiveMinUnitPrice = 210m,
                            VideoUrl = "https://example.com/courses/professional_german_intro.mp4"
                        });
                });

            modelBuilder.Entity("Web.Entities.CourseCategory", b =>
                {
                    b.Property<int>("CourseCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("課程類別Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseCategoryId"));

                    b.Property<string>("CategorytName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("課程類別名稱");

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("更新時間");

                    b.HasKey("CourseCategoryId")
                        .HasName("PK__CourseCa__4D67EBB68E28BA31");

                    b.ToTable("CourseCategories");

                    b.HasData(
                        new
                        {
                            CourseCategoryId = 1,
                            CategorytName = "語言學習",
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5115)
                        },
                        new
                        {
                            CourseCategoryId = 2,
                            CategorytName = "程式設計",
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5118)
                        },
                        new
                        {
                            CourseCategoryId = 3,
                            CategorytName = "升學科目",
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5120)
                        });
                });

            modelBuilder.Entity("Web.Entities.CourseHour", b =>
                {
                    b.Property<int>("CourseHourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("課程時間Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseHourId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("小時時段");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("更改時間");

                    b.HasKey("CourseHourId")
                        .HasName("PK__CourseHo__AE73575BBC30FF2E");

                    b.ToTable("CourseHours");

                    b.HasData(
                        new
                        {
                            CourseHourId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7531),
                            Hour = "00:00"
                        },
                        new
                        {
                            CourseHourId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7533),
                            Hour = "01:00"
                        },
                        new
                        {
                            CourseHourId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7535),
                            Hour = "02:00"
                        },
                        new
                        {
                            CourseHourId = 4,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7537),
                            Hour = "03:00"
                        },
                        new
                        {
                            CourseHourId = 5,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7538),
                            Hour = "04:00"
                        },
                        new
                        {
                            CourseHourId = 6,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7540),
                            Hour = "05:00"
                        },
                        new
                        {
                            CourseHourId = 7,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7545),
                            Hour = "06:00"
                        },
                        new
                        {
                            CourseHourId = 8,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7547),
                            Hour = "07:00"
                        },
                        new
                        {
                            CourseHourId = 9,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7548),
                            Hour = "08:00"
                        },
                        new
                        {
                            CourseHourId = 10,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7550),
                            Hour = "09:00"
                        },
                        new
                        {
                            CourseHourId = 11,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7551),
                            Hour = "10:00"
                        },
                        new
                        {
                            CourseHourId = 12,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7553),
                            Hour = "11:00"
                        },
                        new
                        {
                            CourseHourId = 13,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7555),
                            Hour = "12:00"
                        },
                        new
                        {
                            CourseHourId = 14,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7556),
                            Hour = "13:00"
                        },
                        new
                        {
                            CourseHourId = 15,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7558),
                            Hour = "14:00"
                        },
                        new
                        {
                            CourseHourId = 16,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7559),
                            Hour = "15:00"
                        },
                        new
                        {
                            CourseHourId = 17,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7561),
                            Hour = "16:00"
                        },
                        new
                        {
                            CourseHourId = 18,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7592),
                            Hour = "17:00"
                        },
                        new
                        {
                            CourseHourId = 19,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7594),
                            Hour = "18:00"
                        },
                        new
                        {
                            CourseHourId = 20,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7596),
                            Hour = "19:00"
                        },
                        new
                        {
                            CourseHourId = 21,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7597),
                            Hour = "20:00"
                        },
                        new
                        {
                            CourseHourId = 22,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7599),
                            Hour = "21:00"
                        },
                        new
                        {
                            CourseHourId = 23,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7601),
                            Hour = "22:00"
                        },
                        new
                        {
                            CourseHourId = 24,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7602),
                            Hour = "23:00"
                        });
                });

            modelBuilder.Entity("Web.Entities.CourseImage", b =>
                {
                    b.Property<int>("CourseImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("課程照片Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseImageId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasComment("課程Id");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("圖片路徑");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("更改時間");

                    b.HasKey("CourseImageId")
                        .HasName("PK__CourseIm__349B6FE480594337");

                    b.HasIndex(new[] { "CourseId" }, "IX_CourseImages_CourseId");

                    b.ToTable("CourseImages");

                    b.HasData(
                        new
                        {
                            CourseImageId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5228),
                            CourseId = 1,
                            ImageUrl = "https://picsum.photos/id/100/450/300"
                        },
                        new
                        {
                            CourseImageId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5270),
                            CourseId = 1,
                            ImageUrl = "https://picsum.photos/id/101/450/300"
                        },
                        new
                        {
                            CourseImageId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5272),
                            CourseId = 1,
                            ImageUrl = "https://picsum.photos/id/102/450/300"
                        },
                        new
                        {
                            CourseImageId = 4,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5274),
                            CourseId = 2,
                            ImageUrl = "https://picsum.photos/id/103/450/300"
                        },
                        new
                        {
                            CourseImageId = 5,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5279),
                            CourseId = 2,
                            ImageUrl = "https://picsum.photos/id/104/450/300"
                        },
                        new
                        {
                            CourseImageId = 6,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5281),
                            CourseId = 2,
                            ImageUrl = "https://picsum.photos/id/105/450/300"
                        },
                        new
                        {
                            CourseImageId = 7,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5283),
                            CourseId = 3,
                            ImageUrl = "https://picsum.photos/id/106/450/300"
                        },
                        new
                        {
                            CourseImageId = 8,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5284),
                            CourseId = 3,
                            ImageUrl = "https://picsum.photos/id/107/450/300"
                        },
                        new
                        {
                            CourseImageId = 9,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5286),
                            CourseId = 3,
                            ImageUrl = "https://picsum.photos/id/108/450/300"
                        },
                        new
                        {
                            CourseImageId = 10,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5288),
                            CourseId = 4,
                            ImageUrl = "https://picsum.photos/id/109/450/300"
                        },
                        new
                        {
                            CourseImageId = 11,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5289),
                            CourseId = 4,
                            ImageUrl = "https://picsum.photos/id/110/450/300"
                        },
                        new
                        {
                            CourseImageId = 12,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5291),
                            CourseId = 4,
                            ImageUrl = "https://picsum.photos/id/111/450/300"
                        });
                });

            modelBuilder.Entity("Web.Entities.CourseSubject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("課程科目Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int>("CourseCategoryId")
                        .HasColumnType("int")
                        .HasComment("課程類別Id");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("課程科目名稱");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("更新時間");

                    b.HasKey("SubjectId")
                        .HasName("PK__CourseSu__AC1BA3A8B5819935");

                    b.HasIndex(new[] { "CourseCategoryId" }, "IX_CourseSubjects_CourseCategoryId");

                    b.ToTable("CourseSubjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5154),
                            CourseCategoryId = 1,
                            SubjectName = "英文"
                        },
                        new
                        {
                            SubjectId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5156),
                            CourseCategoryId = 1,
                            SubjectName = "日文"
                        },
                        new
                        {
                            SubjectId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5158),
                            CourseCategoryId = 1,
                            SubjectName = "中文"
                        },
                        new
                        {
                            SubjectId = 4,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5160),
                            CourseCategoryId = 1,
                            SubjectName = "德文"
                        },
                        new
                        {
                            SubjectId = 5,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5162),
                            CourseCategoryId = 1,
                            SubjectName = "法文"
                        },
                        new
                        {
                            SubjectId = 6,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5164),
                            CourseCategoryId = 1,
                            SubjectName = "西班牙文"
                        },
                        new
                        {
                            SubjectId = 7,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5166),
                            CourseCategoryId = 2,
                            SubjectName = "HTML/CSS"
                        },
                        new
                        {
                            SubjectId = 8,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5168),
                            CourseCategoryId = 2,
                            SubjectName = "JavaScript"
                        },
                        new
                        {
                            SubjectId = 9,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5170),
                            CourseCategoryId = 2,
                            SubjectName = "C#"
                        },
                        new
                        {
                            SubjectId = 10,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5172),
                            CourseCategoryId = 2,
                            SubjectName = "SQL"
                        },
                        new
                        {
                            SubjectId = 11,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5173),
                            CourseCategoryId = 2,
                            SubjectName = "Python"
                        },
                        new
                        {
                            SubjectId = 12,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5175),
                            CourseCategoryId = 2,
                            SubjectName = "Java"
                        },
                        new
                        {
                            SubjectId = 13,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5177),
                            CourseCategoryId = 3,
                            SubjectName = "數學"
                        },
                        new
                        {
                            SubjectId = 14,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5179),
                            CourseCategoryId = 3,
                            SubjectName = "物理"
                        },
                        new
                        {
                            SubjectId = 15,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5181),
                            CourseCategoryId = 3,
                            SubjectName = "化學"
                        },
                        new
                        {
                            SubjectId = 16,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5182),
                            CourseCategoryId = 3,
                            SubjectName = "歷史"
                        },
                        new
                        {
                            SubjectId = 17,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5184),
                            CourseCategoryId = 3,
                            SubjectName = "地理"
                        },
                        new
                        {
                            SubjectId = 18,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5186),
                            CourseCategoryId = 3,
                            SubjectName = "生物"
                        });
                });

            modelBuilder.Entity("Web.Entities.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("學歷Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科系名稱");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("學校名稱");

                    b.Property<int>("StudyEndYear")
                        .HasColumnType("int")
                        .HasComment("在學期間迄");

                    b.Property<int>("StudyStartYear")
                        .HasColumnType("int")
                        .HasComment("在學期間起");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("修改時間");

                    b.HasKey("EducationId")
                        .HasName("PK__Educatio__4BBE38058A56247B");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            EducationId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4115),
                            DepartmentName = "Computer Science",
                            SchoolName = "National Taiwan University",
                            StudyEndYear = 2014,
                            StudyStartYear = 2010
                        },
                        new
                        {
                            EducationId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4142),
                            DepartmentName = "Economics",
                            SchoolName = "Kyoto University",
                            StudyEndYear = 2016,
                            StudyStartYear = 2012
                        },
                        new
                        {
                            EducationId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4144),
                            DepartmentName = "Engineering",
                            SchoolName = "Seoul National University",
                            StudyEndYear = 2015,
                            StudyStartYear = 2011
                        },
                        new
                        {
                            EducationId = 4,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4147),
                            DepartmentName = "Law",
                            SchoolName = "Harvard University",
                            StudyEndYear = 2012,
                            StudyStartYear = 2008
                        },
                        new
                        {
                            EducationId = 5,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4149),
                            DepartmentName = "Business",
                            SchoolName = "Stanford University",
                            StudyEndYear = 2013,
                            StudyStartYear = 2009
                        },
                        new
                        {
                            EducationId = 6,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4151),
                            DepartmentName = "Philosophy",
                            SchoolName = "University of Oxford",
                            StudyEndYear = 2011,
                            StudyStartYear = 2007
                        },
                        new
                        {
                            EducationId = 7,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4153),
                            DepartmentName = "Mathematics",
                            SchoolName = "University of Cambridge",
                            StudyEndYear = 2010,
                            StudyStartYear = 2006
                        },
                        new
                        {
                            EducationId = 8,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4158),
                            DepartmentName = "Physics",
                            SchoolName = "Massachusetts Institute of Technology",
                            StudyEndYear = 2017,
                            StudyStartYear = 2013
                        },
                        new
                        {
                            EducationId = 9,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4161),
                            DepartmentName = "Chemistry",
                            SchoolName = "University of California, Berkeley",
                            StudyEndYear = 2014,
                            StudyStartYear = 2010
                        },
                        new
                        {
                            EducationId = 10,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4163),
                            DepartmentName = "Biology",
                            SchoolName = "University of Toronto",
                            StudyEndYear = 2016,
                            StudyStartYear = 2012
                        });
                });

            modelBuilder.Entity("Web.Entities.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("會員Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("帳號");

                    b.Property<int>("AccountType")
                        .HasColumnType("int")
                        .HasComment("帳號類型");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("帳戶名稱");

                    b.Property<string>("BankCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("銀行代碼");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasComment("生日");

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int?>("EducationId")
                        .HasColumnType("int")
                        .HasComment("最高學歷Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("電子郵件信箱");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名字");

                    b.Property<short>("Gender")
                        .HasColumnType("smallint")
                        .HasComment("性別");

                    b.Property<string>("HeadShotImage")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("會員頭像");

                    b.Property<bool>("IsTutor")
                        .HasColumnType("bit")
                        .HasComment("是否為教師");

                    b.Property<bool>("IsVerifiedTutor")
                        .HasColumnType("bit")
                        .HasComment("優質會員");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("姓氏");

                    b.Property<int?>("NationId")
                        .HasColumnType("int")
                        .HasComment("國籍Id");

                    b.Property<string>("NativeLanguage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("母語");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("綽號");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("密碼");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength()
                        .HasComment("電話");

                    b.Property<string>("SpokenLanguage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("會的語言");

                    b.Property<string>("TutorIntro")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("教師自介");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("更新時間");

                    b.HasKey("MemberId")
                        .HasName("PK__Members__0CF04B1808627D7C");

                    b.HasIndex(new[] { "EducationId" }, "IX_Members_EducationId");

                    b.HasIndex(new[] { "NationId" }, "IX_Members_NationId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            Account = "john_doe",
                            AccountType = 1,
                            BankAccount = "1234567890",
                            BankCode = "001",
                            Birthday = new DateTime(1994, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4229),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4260),
                            EducationId = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/1.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Doe",
                            NationId = 1,
                            NativeLanguage = "English",
                            Nickname = "JohnD",
                            Password = "password1",
                            Phone = "123456789",
                            SpokenLanguage = "English",
                            TutorIntro = "Experienced English tutor",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4261)
                        },
                        new
                        {
                            MemberId = 2,
                            Account = "jane_smith",
                            AccountType = 2,
                            BankAccount = "2345678901",
                            BankCode = "002",
                            Birthday = new DateTime(1999, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4267),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4270),
                            EducationId = 2,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/2.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Smith",
                            NationId = 2,
                            NativeLanguage = "Japanese",
                            Nickname = "JaneS",
                            Password = "password2",
                            Phone = "987654321",
                            SpokenLanguage = "Japanese",
                            TutorIntro = "Japanese language specialist",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4271)
                        },
                        new
                        {
                            MemberId = 3,
                            Account = "mark_brown",
                            AccountType = 1,
                            BankAccount = "3456789012",
                            BankCode = "003",
                            Birthday = new DateTime(1996, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4276),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4280),
                            EducationId = 3,
                            Email = "mark.brown@example.com",
                            FirstName = "Mark",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/3.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Brown",
                            NationId = 3,
                            NativeLanguage = "Korean",
                            Nickname = "MarkB",
                            Password = "password3",
                            Phone = "123123123",
                            SpokenLanguage = "Korean, English",
                            TutorIntro = "Korean language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4281)
                        },
                        new
                        {
                            MemberId = 4,
                            Account = "chris_taylor",
                            AccountType = 1,
                            BankAccount = "4567890123",
                            BankCode = "004",
                            Birthday = new DateTime(1991, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4285),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4288),
                            EducationId = 4,
                            Email = "chris.taylor@example.com",
                            FirstName = "Chris",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/4.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Taylor",
                            NationId = 4,
                            NativeLanguage = "German",
                            Nickname = "ChrisT",
                            Password = "password4",
                            Phone = "444555666",
                            SpokenLanguage = "German, English",
                            TutorIntro = "German language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4292)
                        },
                        new
                        {
                            MemberId = 5,
                            Account = "sam_white",
                            AccountType = 2,
                            BankAccount = "5678901234",
                            BankCode = "005",
                            Birthday = new DateTime(1997, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4296),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4299),
                            EducationId = 5,
                            Email = "samantha.white@example.com",
                            FirstName = "Samantha",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/5.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "White",
                            NationId = 5,
                            NativeLanguage = "French",
                            Nickname = "SamW",
                            Password = "password5",
                            Phone = "555666777",
                            SpokenLanguage = "French, English",
                            TutorIntro = "French language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4300)
                        },
                        new
                        {
                            MemberId = 6,
                            Account = "paul_walker",
                            AccountType = 1,
                            BankAccount = "6789012345",
                            BankCode = "006",
                            Birthday = new DateTime(1992, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4304),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4307),
                            EducationId = 6,
                            Email = "paul.walker@example.com",
                            FirstName = "Paul",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/6.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Walker",
                            NationId = 6,
                            NativeLanguage = "Spanish",
                            Nickname = "PaulW",
                            Password = "password6",
                            Phone = "666777888",
                            SpokenLanguage = "Spanish, English",
                            TutorIntro = "Spanish language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4308)
                        },
                        new
                        {
                            MemberId = 7,
                            Account = "laura_martin",
                            AccountType = 2,
                            BankAccount = "7890123456",
                            BankCode = "007",
                            Birthday = new DateTime(1995, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4312),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4315),
                            EducationId = 7,
                            Email = "laura.martin@example.com",
                            FirstName = "Laura",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/7.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Martin",
                            NationId = 7,
                            NativeLanguage = "Chinese",
                            Nickname = "LauraM",
                            Password = "password7",
                            Phone = "777888999",
                            SpokenLanguage = "Chinese, English",
                            TutorIntro = "Chinese language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4316)
                        },
                        new
                        {
                            MemberId = 8,
                            Account = "david_jones",
                            AccountType = 1,
                            BankAccount = "8901234567",
                            BankCode = "008",
                            Birthday = new DateTime(1993, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4320),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4323),
                            EducationId = 8,
                            Email = "david.jones@example.com",
                            FirstName = "David",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/8.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Jones",
                            NationId = 8,
                            NativeLanguage = "Russian",
                            Nickname = "DavidJ",
                            Password = "password8",
                            Phone = "888999000",
                            SpokenLanguage = "Russian, English",
                            TutorIntro = "Russian language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4323)
                        },
                        new
                        {
                            MemberId = 9,
                            Account = "emily_davis",
                            AccountType = 2,
                            BankAccount = "9012345678",
                            BankCode = "009",
                            Birthday = new DateTime(1998, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4328),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4335),
                            EducationId = 9,
                            Email = "emily.davis@example.com",
                            FirstName = "Emily",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/9.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Davis",
                            NationId = 9,
                            NativeLanguage = "Italian",
                            Nickname = "EmilyD",
                            Password = "password9",
                            Phone = "999000111",
                            SpokenLanguage = "Italian, English",
                            TutorIntro = "Italian language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4336)
                        },
                        new
                        {
                            MemberId = 10,
                            Account = "michael_wilson",
                            AccountType = 1,
                            BankAccount = "0123456789",
                            BankCode = "010",
                            Birthday = new DateTime(1990, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4340),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4343),
                            EducationId = 10,
                            Email = "michael.wilson@example.com",
                            FirstName = "Michael",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/10.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Wilson",
                            NationId = 10,
                            NativeLanguage = "Portuguese",
                            Nickname = "MichaelW",
                            Password = "password10",
                            Phone = "000111222",
                            SpokenLanguage = "Portuguese, English",
                            TutorIntro = "Portuguese language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4344)
                        },
                        new
                        {
                            MemberId = 11,
                            Account = "carlos_miller",
                            AccountType = 1,
                            BankAccount = "3456781234",
                            BankCode = "011",
                            Birthday = new DateTime(1995, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4348),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4351),
                            EducationId = 1,
                            Email = "carlos.miller@example.com",
                            FirstName = "Carlos",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/11.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Miller",
                            NationId = 1,
                            NativeLanguage = "English",
                            Nickname = "CarlosM",
                            Password = "password11",
                            Phone = "101010101",
                            SpokenLanguage = "English, Spanish",
                            TutorIntro = "Experienced tutor in English and Spanish",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4351)
                        },
                        new
                        {
                            MemberId = 12,
                            Account = "olivia_brown",
                            AccountType = 2,
                            BankAccount = "4567892345",
                            BankCode = "012",
                            Birthday = new DateTime(2000, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4456),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4459),
                            EducationId = 2,
                            Email = "olivia.brown@example.com",
                            FirstName = "Olivia",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/12.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Brown",
                            NationId = 2,
                            NativeLanguage = "Japanese",
                            Nickname = "OliviaB",
                            Password = "password12",
                            Phone = "202020202",
                            SpokenLanguage = "Japanese, English",
                            TutorIntro = "Expert in Japanese language",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4460)
                        },
                        new
                        {
                            MemberId = 13,
                            Account = "james_johnson",
                            AccountType = 1,
                            BankAccount = "5678913456",
                            BankCode = "013",
                            Birthday = new DateTime(1989, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4464),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4467),
                            EducationId = 3,
                            Email = "james.johnson@example.com",
                            FirstName = "James",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/13.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Johnson",
                            NationId = 3,
                            NativeLanguage = "Korean",
                            Nickname = "JamesJ",
                            Password = "password13",
                            Phone = "303030303",
                            SpokenLanguage = "Korean, English",
                            TutorIntro = "Korean language specialist",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4468)
                        },
                        new
                        {
                            MemberId = 14,
                            Account = "emma_garcia",
                            AccountType = 2,
                            BankAccount = "6789124567",
                            BankCode = "014",
                            Birthday = new DateTime(2002, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4476),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4479),
                            EducationId = 4,
                            Email = "emma.garcia@example.com",
                            FirstName = "Emma",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/14.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Garcia",
                            NationId = 4,
                            NativeLanguage = "German",
                            Nickname = "EmmaG",
                            Password = "password14",
                            Phone = "404040404",
                            SpokenLanguage = "German, English",
                            TutorIntro = "Expert in German language",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4480)
                        },
                        new
                        {
                            MemberId = 15,
                            Account = "robert_martinez",
                            AccountType = 1,
                            BankAccount = "7891235678",
                            BankCode = "015",
                            Birthday = new DateTime(1998, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4484),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4487),
                            EducationId = 5,
                            Email = "robert.martinez@example.com",
                            FirstName = "Robert",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/15.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Martinez",
                            NationId = 5,
                            NativeLanguage = "French",
                            Nickname = "RobertM",
                            Password = "password15",
                            Phone = "505050505",
                            SpokenLanguage = "French, English",
                            TutorIntro = "French language specialist",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4487)
                        },
                        new
                        {
                            MemberId = 16,
                            Account = "sophia_rodriguez",
                            AccountType = 2,
                            BankAccount = "8902346789",
                            BankCode = "016",
                            Birthday = new DateTime(2003, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4492),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4495),
                            EducationId = 6,
                            Email = "sophia.rodriguez@example.com",
                            FirstName = "Sophia",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/16.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Rodriguez",
                            NationId = 6,
                            NativeLanguage = "Spanish",
                            Nickname = "SophiaR",
                            Password = "password16",
                            Phone = "606060606",
                            SpokenLanguage = "Spanish, English",
                            TutorIntro = "Spanish language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4495)
                        },
                        new
                        {
                            MemberId = 17,
                            Account = "liam_hernandez",
                            AccountType = 1,
                            BankAccount = "9013457890",
                            BankCode = "017",
                            Birthday = new DateTime(1991, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4500),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4502),
                            EducationId = 7,
                            Email = "liam.hernandez@example.com",
                            FirstName = "Liam",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/17.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Hernandez",
                            NationId = 7,
                            NativeLanguage = "Chinese",
                            Nickname = "LiamH",
                            Password = "password17",
                            Phone = "707070707",
                            SpokenLanguage = "Chinese, English",
                            TutorIntro = "Chinese language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4503)
                        },
                        new
                        {
                            MemberId = 18,
                            Account = "isabella_lopez",
                            AccountType = 2,
                            BankAccount = "0123456789",
                            BankCode = "018",
                            Birthday = new DateTime(2004, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4507),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4510),
                            EducationId = 8,
                            Email = "isabella.lopez@example.com",
                            FirstName = "Isabella",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/18.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Lopez",
                            NationId = 8,
                            NativeLanguage = "Russian",
                            Nickname = "IsabellaL",
                            Password = "password18",
                            Phone = "808080808",
                            SpokenLanguage = "Russian, English",
                            TutorIntro = "Russian language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4514)
                        },
                        new
                        {
                            MemberId = 19,
                            Account = "benjamin_gonzalez",
                            AccountType = 1,
                            BankAccount = "1234567890",
                            BankCode = "019",
                            Birthday = new DateTime(1996, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4518),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4521),
                            EducationId = 9,
                            Email = "benjamin.gonzalez@example.com",
                            FirstName = "Benjamin",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/19.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Gonzalez",
                            NationId = 9,
                            NativeLanguage = "Italian",
                            Nickname = "BenG",
                            Password = "password19",
                            Phone = "909090909",
                            SpokenLanguage = "Italian, English",
                            TutorIntro = "Italian language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4522)
                        },
                        new
                        {
                            MemberId = 20,
                            Account = "mia_wilson",
                            AccountType = 2,
                            BankAccount = "2345678901",
                            BankCode = "020",
                            Birthday = new DateTime(1997, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4526),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4529),
                            EducationId = 10,
                            Email = "mia.wilson@example.com",
                            FirstName = "Mia",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/20.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Wilson",
                            NationId = 10,
                            NativeLanguage = "Portuguese",
                            Nickname = "MiaW",
                            Password = "password20",
                            Phone = "1010101010",
                            SpokenLanguage = "Portuguese, English",
                            TutorIntro = "Portuguese language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4530)
                        },
                        new
                        {
                            MemberId = 21,
                            Account = "daniel_anderson",
                            AccountType = 1,
                            BankAccount = "3456781234",
                            BankCode = "021",
                            Birthday = new DateTime(1995, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4534),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4536),
                            EducationId = 1,
                            Email = "daniel.anderson@example.com",
                            FirstName = "Daniel",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/21.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Anderson",
                            NationId = 1,
                            NativeLanguage = "English",
                            Nickname = "DanA",
                            Password = "password21",
                            Phone = "111111111",
                            SpokenLanguage = "English, Spanish",
                            TutorIntro = "Experienced tutor in English and Spanish",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4537)
                        },
                        new
                        {
                            MemberId = 22,
                            Account = "ava_thomas",
                            AccountType = 2,
                            BankAccount = "4567892345",
                            BankCode = "022",
                            Birthday = new DateTime(2000, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4541),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4544),
                            EducationId = 2,
                            Email = "ava.thomas@example.com",
                            FirstName = "Ava",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/22.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Thomas",
                            NationId = 2,
                            NativeLanguage = "Japanese",
                            Nickname = "AvaT",
                            Password = "password22",
                            Phone = "222222222",
                            SpokenLanguage = "Japanese, English",
                            TutorIntro = "Expert in Japanese language",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4545)
                        },
                        new
                        {
                            MemberId = 23,
                            Account = "matthew_jackson",
                            AccountType = 1,
                            BankAccount = "5678913456",
                            BankCode = "023",
                            Birthday = new DateTime(1989, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4549),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4555),
                            EducationId = 3,
                            Email = "matthew.jackson@example.com",
                            FirstName = "Matthew",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/23.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Jackson",
                            NationId = 3,
                            NativeLanguage = "Korean",
                            Nickname = "MattJ",
                            Password = "password23",
                            Phone = "333333333",
                            SpokenLanguage = "Korean, English",
                            TutorIntro = "Korean language specialist",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4555)
                        },
                        new
                        {
                            MemberId = 24,
                            Account = "ella_harris",
                            AccountType = 2,
                            BankAccount = "6789124567",
                            BankCode = "024",
                            Birthday = new DateTime(2002, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4560),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4562),
                            EducationId = 4,
                            Email = "ella.harris@example.com",
                            FirstName = "Ella",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/24.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Harris",
                            NationId = 4,
                            NativeLanguage = "German",
                            Nickname = "EllaH",
                            Password = "password24",
                            Phone = "444444444",
                            SpokenLanguage = "German, English",
                            TutorIntro = "Expert in German language",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4563)
                        },
                        new
                        {
                            MemberId = 25,
                            Account = "lucas_clark",
                            AccountType = 1,
                            BankAccount = "7891235678",
                            BankCode = "025",
                            Birthday = new DateTime(1998, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4567),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4570),
                            EducationId = 5,
                            Email = "lucas.clark@example.com",
                            FirstName = "Lucas",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/25.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Clark",
                            NationId = 5,
                            NativeLanguage = "French",
                            Nickname = "LukeC",
                            Password = "password25",
                            Phone = "555555555",
                            SpokenLanguage = "French, English",
                            TutorIntro = "French language specialist",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4571)
                        },
                        new
                        {
                            MemberId = 26,
                            Account = "mia_lewis",
                            AccountType = 2,
                            BankAccount = "8902346789",
                            BankCode = "026",
                            Birthday = new DateTime(2003, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4611),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4614),
                            EducationId = 6,
                            Email = "mia.lewis@example.com",
                            FirstName = "Mia",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/26.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Lewis",
                            NationId = 6,
                            NativeLanguage = "Spanish",
                            Nickname = "MiaL",
                            Password = "password26",
                            Phone = "666666666",
                            SpokenLanguage = "Spanish, English",
                            TutorIntro = "Spanish language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4615)
                        },
                        new
                        {
                            MemberId = 27,
                            Account = "logan_young",
                            AccountType = 1,
                            BankAccount = "9013457890",
                            BankCode = "027",
                            Birthday = new DateTime(1991, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4619),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4622),
                            EducationId = 7,
                            Email = "logan.young@example.com",
                            FirstName = "Logan",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/27.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Young",
                            NationId = 7,
                            NativeLanguage = "Chinese",
                            Nickname = "LoganY",
                            Password = "password27",
                            Phone = "777777777",
                            SpokenLanguage = "Chinese, English",
                            TutorIntro = "Chinese language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4623)
                        },
                        new
                        {
                            MemberId = 28,
                            Account = "aria_king",
                            AccountType = 2,
                            BankAccount = "0123456789",
                            BankCode = "028",
                            Birthday = new DateTime(2004, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4631),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4634),
                            EducationId = 8,
                            Email = "aria.king@example.com",
                            FirstName = "Aria",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/28.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "King",
                            NationId = 8,
                            NativeLanguage = "Russian",
                            Nickname = "AriaK",
                            Password = "password28",
                            Phone = "888888888",
                            SpokenLanguage = "Russian, English",
                            TutorIntro = "Russian language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4635)
                        },
                        new
                        {
                            MemberId = 29,
                            Account = "ethan_wright",
                            AccountType = 1,
                            BankAccount = "1234567890",
                            BankCode = "029",
                            Birthday = new DateTime(1996, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4639),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4642),
                            EducationId = 9,
                            Email = "ethan.wright@example.com",
                            FirstName = "Ethan",
                            Gender = (short)1,
                            HeadShotImage = "https://randomuser.me/api/portraits/men/29.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = true,
                            LastName = "Wright",
                            NationId = 9,
                            NativeLanguage = "Italian",
                            Nickname = "EthanW",
                            Password = "password29",
                            Phone = "999999999",
                            SpokenLanguage = "Italian, English",
                            TutorIntro = "Italian language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4642)
                        },
                        new
                        {
                            MemberId = 30,
                            Account = "charlotte_hill",
                            AccountType = 2,
                            BankAccount = "2345678901",
                            BankCode = "030",
                            Birthday = new DateTime(1997, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4647),
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4650),
                            EducationId = 10,
                            Email = "charlotte.hill@example.com",
                            FirstName = "Charlotte",
                            Gender = (short)2,
                            HeadShotImage = "https://randomuser.me/api/portraits/women/30.jpg",
                            IsTutor = true,
                            IsVerifiedTutor = false,
                            LastName = "Hill",
                            NationId = 10,
                            NativeLanguage = "Portuguese",
                            Nickname = "CharlotteH",
                            Password = "password30",
                            Phone = "1010101010",
                            SpokenLanguage = "Portuguese, English",
                            TutorIntro = "Portuguese language expert",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(4650)
                        });
                });

            modelBuilder.Entity("Web.Entities.MemberCoupon", b =>
                {
                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int>("CouponId")
                        .HasColumnType("int")
                        .HasComment("優惠折扣Id");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit")
                        .HasComment("是否使用");

                    b.Property<int>("MemberCouponId")
                        .HasColumnType("int")
                        .HasComment("會員優惠Id");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("會員Id");

                    b.HasIndex(new[] { "CouponId" }, "IX_MemberCoupons_CouponId");

                    b.HasIndex(new[] { "MemberId" }, "IX_MemberCoupons_MemberId");

                    b.ToTable("MemberCoupons");
                });

            modelBuilder.Entity("Web.Entities.MemberPreference", b =>
                {
                    b.Property<int>("MemberPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("會員偏好Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberPreferenceId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("會員Id");

                    b.Property<int>("SubjecId")
                        .HasColumnType("int")
                        .HasComment("主題Id");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("修改時間");

                    b.HasKey("MemberPreferenceId")
                        .HasName("PK__MemberPr__5B2A2D7058311916");

                    b.HasIndex(new[] { "MemberId" }, "IX_MemberPreferences_MemberId");

                    b.HasIndex(new[] { "SubjecId" }, "IX_MemberPreferences_SubjecId");

                    b.ToTable("MemberPreferences");

                    b.HasData(
                        new
                        {
                            MemberPreferenceId = 1,
                            Cdate = new DateTime(2024, 4, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5916),
                            MemberId = 1,
                            SubjecId = 1,
                            Udate = new DateTime(2024, 5, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5917)
                        },
                        new
                        {
                            MemberPreferenceId = 2,
                            Cdate = new DateTime(2024, 5, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5920),
                            MemberId = 2,
                            SubjecId = 2,
                            Udate = new DateTime(2024, 6, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5921)
                        },
                        new
                        {
                            MemberPreferenceId = 3,
                            Cdate = new DateTime(2024, 6, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5924),
                            MemberId = 3,
                            SubjecId = 3,
                            Udate = new DateTime(2024, 7, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5927)
                        },
                        new
                        {
                            MemberPreferenceId = 4,
                            Cdate = new DateTime(2024, 7, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5932),
                            MemberId = 4,
                            SubjecId = 4,
                            Udate = new DateTime(2024, 8, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5933)
                        },
                        new
                        {
                            MemberPreferenceId = 5,
                            Cdate = new DateTime(2024, 8, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5940),
                            MemberId = 5,
                            SubjecId = 5,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5941)
                        },
                        new
                        {
                            MemberPreferenceId = 6,
                            Cdate = new DateTime(2024, 3, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5943),
                            MemberId = 6,
                            SubjecId = 6,
                            Udate = new DateTime(2024, 4, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5944)
                        },
                        new
                        {
                            MemberPreferenceId = 7,
                            Cdate = new DateTime(2024, 4, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5946),
                            MemberId = 7,
                            SubjecId = 7,
                            Udate = new DateTime(2024, 5, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5947)
                        },
                        new
                        {
                            MemberPreferenceId = 8,
                            Cdate = new DateTime(2024, 5, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5949),
                            MemberId = 8,
                            SubjecId = 8,
                            Udate = new DateTime(2024, 6, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5950)
                        },
                        new
                        {
                            MemberPreferenceId = 9,
                            Cdate = new DateTime(2024, 6, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5952),
                            MemberId = 9,
                            SubjecId = 9,
                            Udate = new DateTime(2024, 7, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5953)
                        },
                        new
                        {
                            MemberPreferenceId = 10,
                            Cdate = new DateTime(2024, 7, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5955),
                            MemberId = 10,
                            SubjecId = 10,
                            Udate = new DateTime(2024, 8, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5956)
                        },
                        new
                        {
                            MemberPreferenceId = 11,
                            Cdate = new DateTime(2024, 8, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5958),
                            MemberId = 11,
                            SubjecId = 11,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5958)
                        },
                        new
                        {
                            MemberPreferenceId = 12,
                            Cdate = new DateTime(2024, 3, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5963),
                            MemberId = 12,
                            SubjecId = 12,
                            Udate = new DateTime(2024, 4, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5964)
                        },
                        new
                        {
                            MemberPreferenceId = 13,
                            Cdate = new DateTime(2024, 4, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5966),
                            MemberId = 13,
                            SubjecId = 13,
                            Udate = new DateTime(2024, 5, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5967)
                        },
                        new
                        {
                            MemberPreferenceId = 14,
                            Cdate = new DateTime(2024, 5, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5969),
                            MemberId = 14,
                            SubjecId = 14,
                            Udate = new DateTime(2024, 6, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5970)
                        },
                        new
                        {
                            MemberPreferenceId = 15,
                            Cdate = new DateTime(2024, 6, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5972),
                            MemberId = 15,
                            SubjecId = 15,
                            Udate = new DateTime(2024, 7, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5976)
                        },
                        new
                        {
                            MemberPreferenceId = 16,
                            Cdate = new DateTime(2024, 7, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5978),
                            MemberId = 16,
                            SubjecId = 16,
                            Udate = new DateTime(2024, 8, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5981)
                        },
                        new
                        {
                            MemberPreferenceId = 17,
                            Cdate = new DateTime(2024, 8, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5988),
                            MemberId = 17,
                            SubjecId = 17,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5992)
                        },
                        new
                        {
                            MemberPreferenceId = 18,
                            Cdate = new DateTime(2024, 3, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5993),
                            MemberId = 18,
                            SubjecId = 18,
                            Udate = new DateTime(2024, 4, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5994)
                        },
                        new
                        {
                            MemberPreferenceId = 19,
                            Cdate = new DateTime(2024, 4, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6001),
                            MemberId = 19,
                            SubjecId = 1,
                            Udate = new DateTime(2024, 5, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6002)
                        },
                        new
                        {
                            MemberPreferenceId = 20,
                            Cdate = new DateTime(2024, 5, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6006),
                            MemberId = 20,
                            SubjecId = 2,
                            Udate = new DateTime(2024, 6, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6007)
                        });
                });

            modelBuilder.Entity("Web.Entities.Nation", b =>
                {
                    b.Property<int>("NationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("國籍Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationId"));

                    b.Property<string>("FlagImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("國籍圖片路徑");

                    b.Property<string>("NationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("國籍名稱");

                    b.HasKey("NationId")
                        .HasName("PK__Nations__211B9BBEE3B01F5C");

                    b.ToTable("Nations");

                    b.HasData(
                        new
                        {
                            NationId = 1,
                            FlagImage = "https://flagcdn.com/w320/tw.png",
                            NationName = "Taiwan"
                        },
                        new
                        {
                            NationId = 2,
                            FlagImage = "https://flagcdn.com/w320/jp.png",
                            NationName = "Japan"
                        },
                        new
                        {
                            NationId = 3,
                            FlagImage = "https://flagcdn.com/w320/kr.png",
                            NationName = "South Korea"
                        },
                        new
                        {
                            NationId = 4,
                            FlagImage = "https://flagcdn.com/w320/us.png",
                            NationName = "United States"
                        },
                        new
                        {
                            NationId = 5,
                            FlagImage = "https://flagcdn.com/w320/de.png",
                            NationName = "Germany"
                        },
                        new
                        {
                            NationId = 6,
                            FlagImage = "https://flagcdn.com/w320/fr.png",
                            NationName = "France"
                        },
                        new
                        {
                            NationId = 7,
                            FlagImage = "https://flagcdn.com/w320/es.png",
                            NationName = "Spain"
                        },
                        new
                        {
                            NationId = 8,
                            FlagImage = "https://flagcdn.com/w320/gb.png",
                            NationName = "United Kingdom"
                        },
                        new
                        {
                            NationId = 9,
                            FlagImage = "https://flagcdn.com/w320/ca.png",
                            NationName = "Canada"
                        },
                        new
                        {
                            NationId = 10,
                            FlagImage = "https://flagcdn.com/w320/in.png",
                            NationName = "India"
                        });
                });

            modelBuilder.Entity("Web.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("訂單Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<decimal?>("CouponPrice")
                        .HasColumnType("money")
                        .HasComment("優惠金額");

                    b.Property<short>("InvoiceType")
                        .HasColumnType("smallint")
                        .HasComment("發票類型");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("會員Id");

                    b.Property<short>("OrderStatusId")
                        .HasColumnType("smallint")
                        .HasComment("訂單狀態");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("付款方式");

                    b.Property<string>("SentVatemail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SentVATEmail")
                        .HasComment("寄送Mail");

                    b.Property<string>("TaxIdNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("統一編號");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money")
                        .HasComment("總金額");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime")
                        .HasComment("交易日期");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("更新時間");

                    b.Property<string>("VATNumber")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("VATNumber")
                        .HasComment("發票號碼");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BCFBCC07793");

                    b.HasIndex(new[] { "MemberId" }, "IX_Orders_MemberId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Cdate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5346),
                            CouponPrice = 100.00m,
                            InvoiceType = (short)1,
                            MemberId = 1,
                            OrderStatusId = (short)1,
                            PaymentType = "CreditCard",
                            SentVatemail = "order1@domain.com",
                            TaxIdNumber = "A123456789",
                            TotalPrice = 1000.00m,
                            TransactionDate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5333),
                            Udate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5347),
                            VATNumber = "12345678"
                        },
                        new
                        {
                            OrderId = 2,
                            Cdate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5353),
                            CouponPrice = 150.00m,
                            InvoiceType = (short)2,
                            MemberId = 2,
                            OrderStatusId = (short)2,
                            PaymentType = "PayPal",
                            SentVatemail = "order2@domain.com",
                            TaxIdNumber = "B123456789",
                            TotalPrice = 1500.00m,
                            TransactionDate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5351),
                            Udate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5354),
                            VATNumber = "22345678"
                        },
                        new
                        {
                            OrderId = 3,
                            Cdate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5360),
                            CouponPrice = 200.00m,
                            InvoiceType = (short)1,
                            MemberId = 3,
                            OrderStatusId = (short)3,
                            PaymentType = "BankTransfer",
                            SentVatemail = "order3@domain.com",
                            TaxIdNumber = "C123456789",
                            TotalPrice = 2000.00m,
                            TransactionDate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5357),
                            Udate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5360),
                            VATNumber = "32345678"
                        },
                        new
                        {
                            OrderId = 4,
                            Cdate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5366),
                            CouponPrice = 250.00m,
                            InvoiceType = (short)2,
                            MemberId = 4,
                            OrderStatusId = (short)1,
                            PaymentType = "CreditCard",
                            SentVatemail = "order4@domain.com",
                            TaxIdNumber = "D123456789",
                            TotalPrice = 2500.00m,
                            TransactionDate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5363),
                            Udate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5367),
                            VATNumber = "42345678"
                        },
                        new
                        {
                            OrderId = 5,
                            Cdate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5372),
                            CouponPrice = 300.00m,
                            InvoiceType = (short)1,
                            MemberId = 5,
                            OrderStatusId = (short)2,
                            PaymentType = "PayPal",
                            SentVatemail = "order5@domain.com",
                            TaxIdNumber = "E123456789",
                            TotalPrice = 3000.00m,
                            TransactionDate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5369),
                            Udate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5373),
                            VATNumber = "52345678"
                        },
                        new
                        {
                            OrderId = 6,
                            Cdate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5378),
                            CouponPrice = 350.00m,
                            InvoiceType = (short)2,
                            MemberId = 6,
                            OrderStatusId = (short)3,
                            PaymentType = "BankTransfer",
                            SentVatemail = "order6@domain.com",
                            TaxIdNumber = "F123456789",
                            TotalPrice = 3500.00m,
                            TransactionDate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5376),
                            Udate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5379),
                            VATNumber = "62345678"
                        },
                        new
                        {
                            OrderId = 7,
                            Cdate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5384),
                            CouponPrice = 400.00m,
                            InvoiceType = (short)1,
                            MemberId = 7,
                            OrderStatusId = (short)1,
                            PaymentType = "CreditCard",
                            SentVatemail = "order7@domain.com",
                            TaxIdNumber = "G123456789",
                            TotalPrice = 4000.00m,
                            TransactionDate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5382),
                            Udate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5385),
                            VATNumber = "72345678"
                        },
                        new
                        {
                            OrderId = 8,
                            Cdate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5390),
                            CouponPrice = 450.00m,
                            InvoiceType = (short)2,
                            MemberId = 8,
                            OrderStatusId = (short)2,
                            PaymentType = "PayPal",
                            SentVatemail = "order8@domain.com",
                            TaxIdNumber = "H123456789",
                            TotalPrice = 4500.00m,
                            TransactionDate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5388),
                            Udate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5391),
                            VATNumber = "82345678"
                        },
                        new
                        {
                            OrderId = 9,
                            Cdate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5399),
                            CouponPrice = 500.00m,
                            InvoiceType = (short)1,
                            MemberId = 9,
                            OrderStatusId = (short)3,
                            PaymentType = "BankTransfer",
                            SentVatemail = "order9@domain.com",
                            TaxIdNumber = "I123456789",
                            TotalPrice = 5000.00m,
                            TransactionDate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5397),
                            Udate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5400),
                            VATNumber = "92345678"
                        },
                        new
                        {
                            OrderId = 10,
                            Cdate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5405),
                            CouponPrice = 550.00m,
                            InvoiceType = (short)2,
                            MemberId = 10,
                            OrderStatusId = (short)1,
                            PaymentType = "CreditCard",
                            SentVatemail = "order10@domain.com",
                            TaxIdNumber = "J123456789",
                            TotalPrice = 5500.00m,
                            TransactionDate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5403),
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5406),
                            VATNumber = "01234567"
                        },
                        new
                        {
                            OrderId = 11,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5410),
                            CouponPrice = 600.00m,
                            InvoiceType = (short)1,
                            MemberId = 11,
                            OrderStatusId = (short)1,
                            PaymentType = "CreditCard",
                            SentVatemail = "order11@domain.com",
                            TaxIdNumber = "K123456789",
                            TotalPrice = 6000.00m,
                            TransactionDate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5408),
                            Udate = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5411),
                            VATNumber = "12345679"
                        },
                        new
                        {
                            OrderId = 12,
                            Cdate = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5416),
                            CouponPrice = 650.00m,
                            InvoiceType = (short)2,
                            MemberId = 12,
                            OrderStatusId = (short)2,
                            PaymentType = "PayPal",
                            SentVatemail = "order12@domain.com",
                            TaxIdNumber = "L123456789",
                            TotalPrice = 6500.00m,
                            TransactionDate = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5414),
                            Udate = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5417),
                            VATNumber = "22345679"
                        },
                        new
                        {
                            OrderId = 13,
                            Cdate = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5422),
                            CouponPrice = 700.00m,
                            InvoiceType = (short)1,
                            MemberId = 13,
                            OrderStatusId = (short)3,
                            PaymentType = "BankTransfer",
                            SentVatemail = "order13@domain.com",
                            TaxIdNumber = "M123456789",
                            TotalPrice = 7000.00m,
                            TransactionDate = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5420),
                            Udate = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5423),
                            VATNumber = "32345679"
                        },
                        new
                        {
                            OrderId = 14,
                            Cdate = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5431),
                            CouponPrice = 750.00m,
                            InvoiceType = (short)2,
                            MemberId = 14,
                            OrderStatusId = (short)1,
                            PaymentType = "CreditCard",
                            SentVatemail = "order14@domain.com",
                            TaxIdNumber = "N123456789",
                            TotalPrice = 7500.00m,
                            TransactionDate = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5425),
                            Udate = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5432),
                            VATNumber = "42345679"
                        },
                        new
                        {
                            OrderId = 15,
                            Cdate = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5436),
                            CouponPrice = 800.00m,
                            InvoiceType = (short)1,
                            MemberId = 15,
                            OrderStatusId = (short)2,
                            PaymentType = "PayPal",
                            SentVatemail = "order15@domain.com",
                            TaxIdNumber = "O123456789",
                            TotalPrice = 8000.00m,
                            TransactionDate = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5434),
                            Udate = new DateTime(2024, 9, 10, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5437),
                            VATNumber = "52345679"
                        },
                        new
                        {
                            OrderId = 16,
                            Cdate = new DateTime(2024, 9, 10, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5442),
                            CouponPrice = 850.00m,
                            InvoiceType = (short)2,
                            MemberId = 16,
                            OrderStatusId = (short)3,
                            PaymentType = "BankTransfer",
                            SentVatemail = "order16@domain.com",
                            TaxIdNumber = "P123456789",
                            TotalPrice = 8500.00m,
                            TransactionDate = new DateTime(2024, 9, 10, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5440),
                            Udate = new DateTime(2024, 9, 11, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5443),
                            VATNumber = "62345679"
                        },
                        new
                        {
                            OrderId = 17,
                            Cdate = new DateTime(2024, 9, 11, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5447),
                            CouponPrice = 900.00m,
                            InvoiceType = (short)1,
                            MemberId = 17,
                            OrderStatusId = (short)1,
                            PaymentType = "CreditCard",
                            SentVatemail = "order17@domain.com",
                            TaxIdNumber = "Q123456789",
                            TotalPrice = 9000.00m,
                            TransactionDate = new DateTime(2024, 9, 11, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5445),
                            Udate = new DateTime(2024, 9, 12, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5448),
                            VATNumber = "72345679"
                        },
                        new
                        {
                            OrderId = 18,
                            Cdate = new DateTime(2024, 9, 12, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5453),
                            CouponPrice = 950.00m,
                            InvoiceType = (short)2,
                            MemberId = 18,
                            OrderStatusId = (short)2,
                            PaymentType = "PayPal",
                            SentVatemail = "order18@domain.com",
                            TaxIdNumber = "R123456789",
                            TotalPrice = 9500.00m,
                            TransactionDate = new DateTime(2024, 9, 12, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5451),
                            Udate = new DateTime(2024, 9, 13, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5454),
                            VATNumber = "82345679"
                        },
                        new
                        {
                            OrderId = 19,
                            Cdate = new DateTime(2024, 9, 13, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5462),
                            CouponPrice = 1000.00m,
                            InvoiceType = (short)1,
                            MemberId = 19,
                            OrderStatusId = (short)3,
                            PaymentType = "BankTransfer",
                            SentVatemail = "order19@domain.com",
                            TaxIdNumber = "S123456789",
                            TotalPrice = 10000.00m,
                            TransactionDate = new DateTime(2024, 9, 13, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5456),
                            Udate = new DateTime(2024, 9, 14, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5462),
                            VATNumber = "92345679"
                        },
                        new
                        {
                            OrderId = 20,
                            Cdate = new DateTime(2024, 9, 14, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5467),
                            CouponPrice = 1050.00m,
                            InvoiceType = (short)2,
                            MemberId = 20,
                            OrderStatusId = (short)1,
                            PaymentType = "CreditCard",
                            SentVatemail = "order20@domain.com",
                            TaxIdNumber = "T123456789",
                            TotalPrice = 10500.00m,
                            TransactionDate = new DateTime(2024, 9, 14, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5465),
                            Udate = new DateTime(2024, 9, 15, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(5468),
                            VATNumber = "01234579"
                        });
                });

            modelBuilder.Entity("Web.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("訂單明細Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("訂單Id");

                    b.Property<string>("CourseCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("課程類別");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasComment("課程Id");

                    b.Property<string>("CourseSubject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("課程主題");

                    b.Property<string>("CourseTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("課程名稱");

                    b.Property<short>("CourseType")
                        .HasColumnType("smallint")
                        .HasComment("課程類別");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("money")
                        .HasComment("折扣金額");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint")
                        .HasComment("購買堂數");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money")
                        .HasComment("總價");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money")
                        .HasComment("課程單價");

                    b.HasKey("OrderDetailId", "OrderId")
                        .HasName("PK__OrderDet__3F80D6D0305DA525");

                    b.HasIndex(new[] { "CourseId" }, "IX_OrderDetails_CourseId");

                    b.HasIndex(new[] { "OrderId" }, "IX_OrderDetails_OrderId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailId = 1,
                            OrderId = 1,
                            CourseCategory = "語言學習",
                            CourseId = 1,
                            CourseSubject = "英文",
                            CourseTitle = "英文基礎",
                            CourseType = (short)1,
                            DiscountPrice = 10.00m,
                            Quantity = (short)10,
                            TotalPrice = 900.00m,
                            UnitPrice = 100.00m
                        },
                        new
                        {
                            OrderDetailId = 2,
                            OrderId = 2,
                            CourseCategory = "語言學習",
                            CourseId = 2,
                            CourseSubject = "日文",
                            CourseTitle = "日文會話",
                            CourseType = (short)1,
                            DiscountPrice = 20.00m,
                            Quantity = (short)5,
                            TotalPrice = 980.00m,
                            UnitPrice = 200.00m
                        },
                        new
                        {
                            OrderDetailId = 3,
                            OrderId = 3,
                            CourseCategory = "程式設計",
                            CourseId = 3,
                            CourseSubject = "C#",
                            CourseTitle = "C# 基礎",
                            CourseType = (short)1,
                            DiscountPrice = 30.00m,
                            Quantity = (short)3,
                            TotalPrice = 870.00m,
                            UnitPrice = 300.00m
                        },
                        new
                        {
                            OrderDetailId = 4,
                            OrderId = 4,
                            CourseCategory = "程式設計",
                            CourseId = 4,
                            CourseSubject = "SQL",
                            CourseTitle = "SQL進階",
                            CourseType = (short)2,
                            DiscountPrice = 40.00m,
                            Quantity = (short)2,
                            TotalPrice = 760.00m,
                            UnitPrice = 400.00m
                        },
                        new
                        {
                            OrderDetailId = 5,
                            OrderId = 5,
                            CourseCategory = "程式設計",
                            CourseId = 5,
                            CourseSubject = "Java",
                            CourseTitle = "Java 進階",
                            CourseType = (short)2,
                            DiscountPrice = 50.00m,
                            Quantity = (short)4,
                            TotalPrice = 1950.00m,
                            UnitPrice = 500.00m
                        },
                        new
                        {
                            OrderDetailId = 6,
                            OrderId = 6,
                            CourseCategory = "升學科目",
                            CourseId = 6,
                            CourseSubject = "數學",
                            CourseTitle = "數學基礎",
                            CourseType = (short)1,
                            DiscountPrice = 60.00m,
                            Quantity = (short)1,
                            TotalPrice = 540.00m,
                            UnitPrice = 600.00m
                        },
                        new
                        {
                            OrderDetailId = 7,
                            OrderId = 7,
                            CourseCategory = "升學科目",
                            CourseId = 7,
                            CourseSubject = "物理",
                            CourseTitle = "物理基礎",
                            CourseType = (short)1,
                            DiscountPrice = 70.00m,
                            Quantity = (short)3,
                            TotalPrice = 1890.00m,
                            UnitPrice = 700.00m
                        },
                        new
                        {
                            OrderDetailId = 8,
                            OrderId = 8,
                            CourseCategory = "升學科目",
                            CourseId = 8,
                            CourseSubject = "化學",
                            CourseTitle = "化學進階",
                            CourseType = (short)2,
                            DiscountPrice = 80.00m,
                            Quantity = (short)2,
                            TotalPrice = 1520.00m,
                            UnitPrice = 800.00m
                        },
                        new
                        {
                            OrderDetailId = 9,
                            OrderId = 9,
                            CourseCategory = "升學科目",
                            CourseId = 9,
                            CourseSubject = "歷史",
                            CourseTitle = "歷史進階",
                            CourseType = (short)2,
                            DiscountPrice = 90.00m,
                            Quantity = (short)1,
                            TotalPrice = 810.00m,
                            UnitPrice = 900.00m
                        },
                        new
                        {
                            OrderDetailId = 10,
                            OrderId = 10,
                            CourseCategory = "升學科目",
                            CourseId = 10,
                            CourseSubject = "地理",
                            CourseTitle = "地理基礎",
                            CourseType = (short)1,
                            DiscountPrice = 100.00m,
                            Quantity = (short)2,
                            TotalPrice = 1900.00m,
                            UnitPrice = 1000.00m
                        },
                        new
                        {
                            OrderDetailId = 11,
                            OrderId = 11,
                            CourseCategory = "升學科目",
                            CourseId = 11,
                            CourseSubject = "生物",
                            CourseTitle = "生物基礎",
                            CourseType = (short)1,
                            DiscountPrice = 110.00m,
                            Quantity = (short)1,
                            TotalPrice = 990.00m,
                            UnitPrice = 1100.00m
                        },
                        new
                        {
                            OrderDetailId = 12,
                            OrderId = 12,
                            CourseCategory = "語言學習",
                            CourseId = 12,
                            CourseSubject = "英文",
                            CourseTitle = "英文進階",
                            CourseType = (short)2,
                            DiscountPrice = 120.00m,
                            Quantity = (short)4,
                            TotalPrice = 4680.00m,
                            UnitPrice = 1200.00m
                        },
                        new
                        {
                            OrderDetailId = 13,
                            OrderId = 13,
                            CourseCategory = "語言學習",
                            CourseId = 13,
                            CourseSubject = "日文",
                            CourseTitle = "日文基礎",
                            CourseType = (short)1,
                            DiscountPrice = 130.00m,
                            Quantity = (short)3,
                            TotalPrice = 3690.00m,
                            UnitPrice = 1300.00m
                        },
                        new
                        {
                            OrderDetailId = 14,
                            OrderId = 14,
                            CourseCategory = "語言學習",
                            CourseId = 14,
                            CourseSubject = "中文",
                            CourseTitle = "中文進階",
                            CourseType = (short)2,
                            DiscountPrice = 140.00m,
                            Quantity = (short)2,
                            TotalPrice = 2660.00m,
                            UnitPrice = 1400.00m
                        },
                        new
                        {
                            OrderDetailId = 15,
                            OrderId = 15,
                            CourseCategory = "語言學習",
                            CourseId = 15,
                            CourseSubject = "德文",
                            CourseTitle = "德文基礎",
                            CourseType = (short)1,
                            DiscountPrice = 150.00m,
                            Quantity = (short)5,
                            TotalPrice = 7050.00m,
                            UnitPrice = 1500.00m
                        },
                        new
                        {
                            OrderDetailId = 16,
                            OrderId = 16,
                            CourseCategory = "語言學習",
                            CourseId = 16,
                            CourseSubject = "法文",
                            CourseTitle = "法文基礎",
                            CourseType = (short)1,
                            DiscountPrice = 160.00m,
                            Quantity = (short)4,
                            TotalPrice = 6240.00m,
                            UnitPrice = 1600.00m
                        },
                        new
                        {
                            OrderDetailId = 17,
                            OrderId = 17,
                            CourseCategory = "語言學習",
                            CourseId = 17,
                            CourseSubject = "西班牙文",
                            CourseTitle = "西班牙文進階",
                            CourseType = (short)2,
                            DiscountPrice = 170.00m,
                            Quantity = (short)2,
                            TotalPrice = 3230.00m,
                            UnitPrice = 1700.00m
                        },
                        new
                        {
                            OrderDetailId = 18,
                            OrderId = 18,
                            CourseCategory = "程式設計",
                            CourseId = 18,
                            CourseSubject = "HTML/CSS",
                            CourseTitle = "HTML/CSS進階",
                            CourseType = (short)2,
                            DiscountPrice = 180.00m,
                            Quantity = (short)1,
                            TotalPrice = 1620.00m,
                            UnitPrice = 1800.00m
                        },
                        new
                        {
                            OrderDetailId = 19,
                            OrderId = 19,
                            CourseCategory = "程式設計",
                            CourseId = 19,
                            CourseSubject = "JavaScript",
                            CourseTitle = "JavaScript基礎",
                            CourseType = (short)1,
                            DiscountPrice = 190.00m,
                            Quantity = (short)4,
                            TotalPrice = 7370.00m,
                            UnitPrice = 1900.00m
                        },
                        new
                        {
                            OrderDetailId = 20,
                            OrderId = 20,
                            CourseCategory = "程式設計",
                            CourseId = 20,
                            CourseSubject = "Python",
                            CourseTitle = "Python進階",
                            CourseType = (short)2,
                            DiscountPrice = 200.00m,
                            Quantity = (short)2,
                            TotalPrice = 3800.00m,
                            UnitPrice = 2000.00m
                        });
                });

            modelBuilder.Entity("Web.Entities.ProfessionalLicense", b =>
                {
                    b.Property<int>("ProfessionalLicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("證照Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessionalLicenseId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("會員Id");

                    b.Property<string>("ProfessionalLicenseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("證照名稱");

                    b.Property<string>("ProfessionalLicenseUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("證照路徑");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("更新時間");

                    b.HasKey("ProfessionalLicenseId")
                        .HasName("PK__Professi__E1630CEE26905146");

                    b.HasIndex(new[] { "MemberId" }, "IX_ProfessionalLicenses_MemberId");

                    b.ToTable("ProfessionalLicenses");

                    b.HasData(
                        new
                        {
                            ProfessionalLicenseId = 1,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6468),
                            MemberId = 1,
                            ProfessionalLicenseName = "Certified Java Developer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/java_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6469)
                        },
                        new
                        {
                            ProfessionalLicenseId = 2,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6472),
                            MemberId = 2,
                            ProfessionalLicenseName = "Certified Python Developer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/python_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6473)
                        },
                        new
                        {
                            ProfessionalLicenseId = 3,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6475),
                            MemberId = 3,
                            ProfessionalLicenseName = "Certified C# Developer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/csharp_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6476)
                        },
                        new
                        {
                            ProfessionalLicenseId = 4,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6478),
                            MemberId = 4,
                            ProfessionalLicenseName = "Certified SQL Developer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/sql_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6479)
                        },
                        new
                        {
                            ProfessionalLicenseId = 5,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6481),
                            MemberId = 5,
                            ProfessionalLicenseName = "Certified JavaScript Developer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/js_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6482)
                        },
                        new
                        {
                            ProfessionalLicenseId = 6,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6484),
                            MemberId = 6,
                            ProfessionalLicenseName = "Certified Data Analyst",
                            ProfessionalLicenseUrl = "https://example.com/licenses/data_analyst_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6485)
                        },
                        new
                        {
                            ProfessionalLicenseId = 7,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6488),
                            MemberId = 7,
                            ProfessionalLicenseName = "Certified Project Manager",
                            ProfessionalLicenseUrl = "https://example.com/licenses/project_manager_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6489)
                        },
                        new
                        {
                            ProfessionalLicenseId = 8,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6491),
                            MemberId = 8,
                            ProfessionalLicenseName = "Certified Network Engineer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/network_engineer_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6492)
                        },
                        new
                        {
                            ProfessionalLicenseId = 9,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6494),
                            MemberId = 9,
                            ProfessionalLicenseName = "Certified Cloud Architect",
                            ProfessionalLicenseUrl = "https://example.com/licenses/cloud_architect_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6495)
                        },
                        new
                        {
                            ProfessionalLicenseId = 10,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6497),
                            MemberId = 10,
                            ProfessionalLicenseName = "Certified DevOps Engineer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/devops_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6498)
                        },
                        new
                        {
                            ProfessionalLicenseId = 11,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6500),
                            MemberId = 11,
                            ProfessionalLicenseName = "Certified Ethical Hacker",
                            ProfessionalLicenseUrl = "https://example.com/licenses/ethical_hacker_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6501)
                        },
                        new
                        {
                            ProfessionalLicenseId = 12,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6503),
                            MemberId = 12,
                            ProfessionalLicenseName = "Certified AI Engineer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/ai_engineer_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6504)
                        },
                        new
                        {
                            ProfessionalLicenseId = 13,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6507),
                            MemberId = 13,
                            ProfessionalLicenseName = "Certified ML Engineer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/ml_engineer_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6508)
                        },
                        new
                        {
                            ProfessionalLicenseId = 14,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6510),
                            MemberId = 14,
                            ProfessionalLicenseName = "Certified Blockchain Developer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/blockchain_dev_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6511)
                        },
                        new
                        {
                            ProfessionalLicenseId = 15,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6513),
                            MemberId = 15,
                            ProfessionalLicenseName = "Certified UX Designer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/ux_designer_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6514)
                        },
                        new
                        {
                            ProfessionalLicenseId = 16,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6516),
                            MemberId = 16,
                            ProfessionalLicenseName = "Certified UI Designer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/ui_designer_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6517)
                        },
                        new
                        {
                            ProfessionalLicenseId = 17,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6519),
                            MemberId = 17,
                            ProfessionalLicenseName = "Certified Product Manager",
                            ProfessionalLicenseUrl = "https://example.com/licenses/product_manager_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6520)
                        },
                        new
                        {
                            ProfessionalLicenseId = 18,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6522),
                            MemberId = 18,
                            ProfessionalLicenseName = "Certified IT Security Specialist",
                            ProfessionalLicenseUrl = "https://example.com/licenses/it_security_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6523)
                        },
                        new
                        {
                            ProfessionalLicenseId = 19,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6525),
                            MemberId = 19,
                            ProfessionalLicenseName = "Certified Web Developer",
                            ProfessionalLicenseUrl = "https://example.com/licenses/web_dev_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6526)
                        },
                        new
                        {
                            ProfessionalLicenseId = 20,
                            Cdate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6528),
                            MemberId = 20,
                            ProfessionalLicenseName = "Certified Software Tester",
                            ProfessionalLicenseUrl = "https://example.com/licenses/software_tester_certified.jpg",
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6529)
                        });
                });

            modelBuilder.Entity("Web.Entities.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("課程評論Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("評論日期");

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("評論內容");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasComment("課程Id");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint")
                        .HasComment("評分");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasComment("學生Id");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("修改日期");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__74BC79CE821ED086");

                    b.HasIndex(new[] { "CourseId" }, "IX_Reviews_CourseId");

                    b.HasIndex(new[] { "StudentId" }, "IX_Reviews_StudentId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Cdate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6568),
                            CommentText = "Great course!",
                            CourseId = 1,
                            Rating = (byte)5,
                            StudentId = 1,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6569)
                        },
                        new
                        {
                            ReviewId = 2,
                            Cdate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6571),
                            CommentText = "Very informative.",
                            CourseId = 2,
                            Rating = (byte)4,
                            StudentId = 2,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6572)
                        },
                        new
                        {
                            ReviewId = 3,
                            Cdate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6575),
                            CommentText = "Excellent content.",
                            CourseId = 3,
                            Rating = (byte)5,
                            StudentId = 3,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6576)
                        },
                        new
                        {
                            ReviewId = 4,
                            Cdate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6580),
                            CommentText = "Good explanations.",
                            CourseId = 4,
                            Rating = (byte)4,
                            StudentId = 4,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6581)
                        },
                        new
                        {
                            ReviewId = 5,
                            Cdate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6586),
                            CommentText = "Highly recommend.",
                            CourseId = 5,
                            Rating = (byte)5,
                            StudentId = 5,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6587)
                        },
                        new
                        {
                            ReviewId = 6,
                            Cdate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6590),
                            CommentText = "Well structured.",
                            CourseId = 6,
                            Rating = (byte)4,
                            StudentId = 6,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6590)
                        },
                        new
                        {
                            ReviewId = 7,
                            Cdate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6593),
                            CommentText = "Learned a lot.",
                            CourseId = 7,
                            Rating = (byte)5,
                            StudentId = 7,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6594)
                        },
                        new
                        {
                            ReviewId = 8,
                            Cdate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6596),
                            CommentText = "Great examples.",
                            CourseId = 8,
                            Rating = (byte)4,
                            StudentId = 8,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6600)
                        },
                        new
                        {
                            ReviewId = 9,
                            Cdate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6602),
                            CommentText = "In-depth knowledge.",
                            CourseId = 9,
                            Rating = (byte)5,
                            StudentId = 9,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6603)
                        },
                        new
                        {
                            ReviewId = 10,
                            Cdate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6605),
                            CommentText = "Comprehensive.",
                            CourseId = 10,
                            Rating = (byte)4,
                            StudentId = 10,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6606)
                        },
                        new
                        {
                            ReviewId = 11,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6609),
                            CommentText = "Loved it!",
                            CourseId = 11,
                            Rating = (byte)5,
                            StudentId = 11,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6609)
                        },
                        new
                        {
                            ReviewId = 12,
                            Cdate = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6612),
                            CommentText = "Very useful.",
                            CourseId = 12,
                            Rating = (byte)4,
                            StudentId = 12,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6613)
                        },
                        new
                        {
                            ReviewId = 13,
                            Cdate = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6615),
                            CommentText = "Fantastic course!",
                            CourseId = 13,
                            Rating = (byte)5,
                            StudentId = 13,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6616)
                        },
                        new
                        {
                            ReviewId = 14,
                            Cdate = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6618),
                            CommentText = "Great teacher.",
                            CourseId = 14,
                            Rating = (byte)4,
                            StudentId = 14,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6619)
                        },
                        new
                        {
                            ReviewId = 15,
                            Cdate = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6663),
                            CommentText = "Well explained.",
                            CourseId = 15,
                            Rating = (byte)5,
                            StudentId = 15,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6664)
                        },
                        new
                        {
                            ReviewId = 16,
                            Cdate = new DateTime(2024, 9, 10, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6666),
                            CommentText = "Good coverage.",
                            CourseId = 16,
                            Rating = (byte)4,
                            StudentId = 16,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6667)
                        },
                        new
                        {
                            ReviewId = 17,
                            Cdate = new DateTime(2024, 9, 11, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6670),
                            CommentText = "Loved the content.",
                            CourseId = 17,
                            Rating = (byte)5,
                            StudentId = 17,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6670)
                        },
                        new
                        {
                            ReviewId = 18,
                            Cdate = new DateTime(2024, 9, 12, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6672),
                            CommentText = "Very clear.",
                            CourseId = 18,
                            Rating = (byte)4,
                            StudentId = 18,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6673)
                        },
                        new
                        {
                            ReviewId = 19,
                            Cdate = new DateTime(2024, 9, 13, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6675),
                            CommentText = "Highly informative.",
                            CourseId = 19,
                            Rating = (byte)5,
                            StudentId = 19,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6677)
                        },
                        new
                        {
                            ReviewId = 20,
                            Cdate = new DateTime(2024, 9, 14, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6682),
                            CommentText = "Helpful.",
                            CourseId = 20,
                            Rating = (byte)4,
                            StudentId = 20,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6683)
                        },
                        new
                        {
                            ReviewId = 21,
                            Cdate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6686),
                            CommentText = "Amazing course!",
                            CourseId = 21,
                            Rating = (byte)5,
                            StudentId = 21,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6687)
                        },
                        new
                        {
                            ReviewId = 22,
                            Cdate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6689),
                            CommentText = "Well organized.",
                            CourseId = 22,
                            Rating = (byte)4,
                            StudentId = 22,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6690)
                        },
                        new
                        {
                            ReviewId = 23,
                            Cdate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6692),
                            CommentText = "Great insights.",
                            CourseId = 23,
                            Rating = (byte)5,
                            StudentId = 23,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6693)
                        },
                        new
                        {
                            ReviewId = 24,
                            Cdate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6695),
                            CommentText = "Valuable lessons.",
                            CourseId = 24,
                            Rating = (byte)4,
                            StudentId = 24,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6696)
                        },
                        new
                        {
                            ReviewId = 25,
                            Cdate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6698),
                            CommentText = "Excellent teaching.",
                            CourseId = 25,
                            Rating = (byte)5,
                            StudentId = 25,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6699)
                        },
                        new
                        {
                            ReviewId = 26,
                            Cdate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6702),
                            CommentText = "Clear and concise.",
                            CourseId = 26,
                            Rating = (byte)4,
                            StudentId = 26,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6702)
                        },
                        new
                        {
                            ReviewId = 27,
                            Cdate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6705),
                            CommentText = "Very educational.",
                            CourseId = 27,
                            Rating = (byte)5,
                            StudentId = 27,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6706)
                        },
                        new
                        {
                            ReviewId = 28,
                            Cdate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6708),
                            CommentText = "Useful information.",
                            CourseId = 28,
                            Rating = (byte)4,
                            StudentId = 28,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6709)
                        },
                        new
                        {
                            ReviewId = 29,
                            Cdate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6711),
                            CommentText = "Well presented.",
                            CourseId = 29,
                            Rating = (byte)5,
                            StudentId = 29,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6712)
                        },
                        new
                        {
                            ReviewId = 30,
                            Cdate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6714),
                            CommentText = "Good pacing.",
                            CourseId = 30,
                            Rating = (byte)4,
                            StudentId = 30,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6715)
                        });
                });

            modelBuilder.Entity("Web.Entities.ShoppingCart", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("購物車Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartId"));

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime")
                        .HasComment("預約日期");

                    b.Property<DateTime?>("BookingTime")
                        .HasColumnType("datetime")
                        .HasComment("預約時間");

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasComment("課程Id");

                    b.Property<short>("CourseType")
                        .HasColumnType("smallint")
                        .HasComment("課程類型");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("會員Id");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint")
                        .HasComment("購買堂數");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money")
                        .HasComment("單筆總價");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("修改時間");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money")
                        .HasComment("課程單價");

                    b.HasKey("ShoppingCartId")
                        .HasName("PK__TempOrde__38D216B780E2926D");

                    b.HasIndex(new[] { "CourseId" }, "IX_ShoppingCarts_CourseId");

                    b.HasIndex(new[] { "MemberId" }, "IX_ShoppingCarts_MemberId");

                    b.ToTable("ShoppingCarts");

                    b.HasData(
                        new
                        {
                            ShoppingCartId = 1,
                            BookingDate = new DateTime(2024, 8, 18, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6775),
                            BookingTime = new DateTime(2024, 8, 18, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6776),
                            Cdate = new DateTime(2024, 8, 16, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6772),
                            CourseId = 1,
                            CourseType = (short)1,
                            MemberId = 1,
                            Quantity = (short)10,
                            TotalPrice = 1000.00m,
                            Udate = new DateTime(2024, 8, 17, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6774),
                            UnitPrice = 100.00m
                        },
                        new
                        {
                            ShoppingCartId = 2,
                            BookingDate = new DateTime(2024, 8, 19, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6783),
                            BookingTime = new DateTime(2024, 8, 19, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6784),
                            Cdate = new DateTime(2024, 8, 17, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6781),
                            CourseId = 2,
                            CourseType = (short)2,
                            MemberId = 2,
                            Quantity = (short)5,
                            TotalPrice = 1000.00m,
                            Udate = new DateTime(2024, 8, 18, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6781),
                            UnitPrice = 200.00m
                        },
                        new
                        {
                            ShoppingCartId = 3,
                            BookingDate = new DateTime(2024, 8, 20, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6789),
                            BookingTime = new DateTime(2024, 8, 20, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6790),
                            Cdate = new DateTime(2024, 8, 18, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6787),
                            CourseId = 3,
                            CourseType = (short)1,
                            MemberId = 3,
                            Quantity = (short)3,
                            TotalPrice = 900.00m,
                            Udate = new DateTime(2024, 8, 19, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6788),
                            UnitPrice = 300.00m
                        },
                        new
                        {
                            ShoppingCartId = 4,
                            BookingDate = new DateTime(2024, 8, 21, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6796),
                            BookingTime = new DateTime(2024, 8, 21, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6797),
                            Cdate = new DateTime(2024, 8, 19, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6794),
                            CourseId = 4,
                            CourseType = (short)2,
                            MemberId = 4,
                            Quantity = (short)2,
                            TotalPrice = 800.00m,
                            Udate = new DateTime(2024, 8, 20, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6794),
                            UnitPrice = 400.00m
                        },
                        new
                        {
                            ShoppingCartId = 5,
                            BookingDate = new DateTime(2024, 8, 22, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6802),
                            BookingTime = new DateTime(2024, 8, 22, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6803),
                            Cdate = new DateTime(2024, 8, 20, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6800),
                            CourseId = 5,
                            CourseType = (short)1,
                            MemberId = 5,
                            Quantity = (short)4,
                            TotalPrice = 2000.00m,
                            Udate = new DateTime(2024, 8, 21, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6801),
                            UnitPrice = 500.00m
                        },
                        new
                        {
                            ShoppingCartId = 6,
                            BookingDate = new DateTime(2024, 8, 23, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6808),
                            BookingTime = new DateTime(2024, 8, 23, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6809),
                            Cdate = new DateTime(2024, 8, 21, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6806),
                            CourseId = 6,
                            CourseType = (short)2,
                            MemberId = 6,
                            Quantity = (short)1,
                            TotalPrice = 600.00m,
                            Udate = new DateTime(2024, 8, 22, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6807),
                            UnitPrice = 600.00m
                        },
                        new
                        {
                            ShoppingCartId = 7,
                            BookingDate = new DateTime(2024, 8, 24, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6815),
                            BookingTime = new DateTime(2024, 8, 24, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6816),
                            Cdate = new DateTime(2024, 8, 22, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6812),
                            CourseId = 7,
                            CourseType = (short)1,
                            MemberId = 7,
                            Quantity = (short)3,
                            TotalPrice = 2100.00m,
                            Udate = new DateTime(2024, 8, 23, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6813),
                            UnitPrice = 700.00m
                        },
                        new
                        {
                            ShoppingCartId = 8,
                            BookingDate = new DateTime(2024, 8, 25, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6821),
                            BookingTime = new DateTime(2024, 8, 25, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6822),
                            Cdate = new DateTime(2024, 8, 23, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6819),
                            CourseId = 8,
                            CourseType = (short)2,
                            MemberId = 8,
                            Quantity = (short)2,
                            TotalPrice = 1600.00m,
                            Udate = new DateTime(2024, 8, 24, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6820),
                            UnitPrice = 800.00m
                        },
                        new
                        {
                            ShoppingCartId = 9,
                            BookingDate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6827),
                            BookingTime = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6829),
                            Cdate = new DateTime(2024, 8, 24, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6825),
                            CourseId = 9,
                            CourseType = (short)1,
                            MemberId = 9,
                            Quantity = (short)1,
                            TotalPrice = 900.00m,
                            Udate = new DateTime(2024, 8, 25, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6826),
                            UnitPrice = 900.00m
                        },
                        new
                        {
                            ShoppingCartId = 10,
                            BookingDate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6834),
                            BookingTime = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6837),
                            Cdate = new DateTime(2024, 8, 25, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6832),
                            CourseId = 10,
                            CourseType = (short)2,
                            MemberId = 10,
                            Quantity = (short)2,
                            TotalPrice = 2000.00m,
                            Udate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6833),
                            UnitPrice = 1000.00m
                        },
                        new
                        {
                            ShoppingCartId = 11,
                            BookingDate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6842),
                            BookingTime = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6843),
                            Cdate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6840),
                            CourseId = 11,
                            CourseType = (short)1,
                            MemberId = 11,
                            Quantity = (short)4,
                            TotalPrice = 4400.00m,
                            Udate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6841),
                            UnitPrice = 1100.00m
                        },
                        new
                        {
                            ShoppingCartId = 12,
                            BookingDate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6849),
                            BookingTime = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6850),
                            Cdate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6846),
                            CourseId = 12,
                            CourseType = (short)2,
                            MemberId = 12,
                            Quantity = (short)3,
                            TotalPrice = 3600.00m,
                            Udate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6847),
                            UnitPrice = 1200.00m
                        },
                        new
                        {
                            ShoppingCartId = 13,
                            BookingDate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6855),
                            BookingTime = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6856),
                            Cdate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6853),
                            CourseId = 13,
                            CourseType = (short)1,
                            MemberId = 13,
                            Quantity = (short)5,
                            TotalPrice = 6500.00m,
                            Udate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6854),
                            UnitPrice = 1300.00m
                        },
                        new
                        {
                            ShoppingCartId = 14,
                            BookingDate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6861),
                            BookingTime = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6863),
                            Cdate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6859),
                            CourseId = 14,
                            CourseType = (short)2,
                            MemberId = 14,
                            Quantity = (short)2,
                            TotalPrice = 2800.00m,
                            Udate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6860),
                            UnitPrice = 1400.00m
                        },
                        new
                        {
                            ShoppingCartId = 15,
                            BookingDate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6871),
                            BookingTime = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6872),
                            Cdate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6868),
                            CourseId = 15,
                            CourseType = (short)1,
                            MemberId = 15,
                            Quantity = (short)1,
                            TotalPrice = 1500.00m,
                            Udate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6869),
                            UnitPrice = 1500.00m
                        },
                        new
                        {
                            ShoppingCartId = 16,
                            BookingDate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6877),
                            BookingTime = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6878),
                            Cdate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6875),
                            CourseId = 16,
                            CourseType = (short)2,
                            MemberId = 16,
                            Quantity = (short)3,
                            TotalPrice = 4800.00m,
                            Udate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6876),
                            UnitPrice = 1600.00m
                        },
                        new
                        {
                            ShoppingCartId = 17,
                            BookingDate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6886),
                            BookingTime = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6887),
                            Cdate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6881),
                            CourseId = 17,
                            CourseType = (short)1,
                            MemberId = 17,
                            Quantity = (short)2,
                            TotalPrice = 3400.00m,
                            Udate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6885),
                            UnitPrice = 1700.00m
                        },
                        new
                        {
                            ShoppingCartId = 18,
                            BookingDate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6892),
                            BookingTime = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6893),
                            Cdate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6890),
                            CourseId = 18,
                            CourseType = (short)2,
                            MemberId = 18,
                            Quantity = (short)4,
                            TotalPrice = 7200.00m,
                            Udate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6891),
                            UnitPrice = 1800.00m
                        },
                        new
                        {
                            ShoppingCartId = 19,
                            BookingDate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6898),
                            BookingTime = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6899),
                            Cdate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6896),
                            CourseId = 19,
                            CourseType = (short)1,
                            MemberId = 19,
                            Quantity = (short)1,
                            TotalPrice = 1900.00m,
                            Udate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6897),
                            UnitPrice = 1900.00m
                        },
                        new
                        {
                            ShoppingCartId = 20,
                            BookingDate = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6907),
                            BookingTime = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6908),
                            Cdate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6905),
                            CourseId = 20,
                            CourseType = (short)2,
                            MemberId = 20,
                            Quantity = (short)2,
                            TotalPrice = 4000.00m,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6906),
                            UnitPrice = 2000.00m
                        });
                });

            modelBuilder.Entity("Web.Entities.ShoppingCartBooking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("課程預定Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateOnly?>("BookingDate")
                        .HasColumnType("date")
                        .HasComment("預約日期");

                    b.Property<short?>("BookingTime")
                        .HasColumnType("smallint")
                        .HasComment("預約時間");

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasComment("課程Id");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasComment("會員Id");

                    b.Property<int?>("TempShoppingCartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("修改時間");

                    b.HasKey("BookingId")
                        .HasName("PK__Shopping__73951AED7A624397");

                    b.HasIndex(new[] { "TempShoppingCartId" }, "IX_ShoppingCartBookings_TempShoppingCartId");

                    b.ToTable("ShoppingCartBookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BookingDate = new DateOnly(2024, 8, 16),
                            BookingTime = (short)10,
                            Cdate = new DateTime(2024, 8, 16, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6972),
                            CourseId = 1,
                            MemberId = 1,
                            TempShoppingCartId = 1,
                            Udate = new DateTime(2024, 8, 17, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6973)
                        },
                        new
                        {
                            BookingId = 2,
                            BookingDate = new DateOnly(2024, 8, 17),
                            BookingTime = (short)11,
                            Cdate = new DateTime(2024, 8, 17, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6978),
                            CourseId = 2,
                            MemberId = 2,
                            TempShoppingCartId = 2,
                            Udate = new DateTime(2024, 8, 18, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6979)
                        },
                        new
                        {
                            BookingId = 3,
                            BookingDate = new DateOnly(2024, 8, 18),
                            BookingTime = (short)12,
                            Cdate = new DateTime(2024, 8, 18, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6983),
                            CourseId = 3,
                            MemberId = 3,
                            TempShoppingCartId = 3,
                            Udate = new DateTime(2024, 8, 19, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6984)
                        },
                        new
                        {
                            BookingId = 4,
                            BookingDate = new DateOnly(2024, 8, 19),
                            BookingTime = (short)13,
                            Cdate = new DateTime(2024, 8, 19, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6989),
                            CourseId = 4,
                            MemberId = 4,
                            TempShoppingCartId = 4,
                            Udate = new DateTime(2024, 8, 20, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6990)
                        },
                        new
                        {
                            BookingId = 5,
                            BookingDate = new DateOnly(2024, 8, 20),
                            BookingTime = (short)14,
                            Cdate = new DateTime(2024, 8, 20, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6994),
                            CourseId = 5,
                            MemberId = 5,
                            TempShoppingCartId = 5,
                            Udate = new DateTime(2024, 8, 21, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(6995)
                        },
                        new
                        {
                            BookingId = 6,
                            BookingDate = new DateOnly(2024, 8, 21),
                            BookingTime = (short)15,
                            Cdate = new DateTime(2024, 8, 21, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7002),
                            CourseId = 6,
                            MemberId = 6,
                            TempShoppingCartId = 6,
                            Udate = new DateTime(2024, 8, 22, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7003)
                        },
                        new
                        {
                            BookingId = 7,
                            BookingDate = new DateOnly(2024, 8, 22),
                            BookingTime = (short)16,
                            Cdate = new DateTime(2024, 8, 22, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7008),
                            CourseId = 7,
                            MemberId = 7,
                            TempShoppingCartId = 7,
                            Udate = new DateTime(2024, 8, 23, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7009)
                        },
                        new
                        {
                            BookingId = 8,
                            BookingDate = new DateOnly(2024, 8, 23),
                            BookingTime = (short)17,
                            Cdate = new DateTime(2024, 8, 23, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7014),
                            CourseId = 8,
                            MemberId = 8,
                            TempShoppingCartId = 8,
                            Udate = new DateTime(2024, 8, 24, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7015)
                        },
                        new
                        {
                            BookingId = 9,
                            BookingDate = new DateOnly(2024, 8, 24),
                            BookingTime = (short)18,
                            Cdate = new DateTime(2024, 8, 24, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7019),
                            CourseId = 9,
                            MemberId = 9,
                            TempShoppingCartId = 9,
                            Udate = new DateTime(2024, 8, 25, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7020)
                        },
                        new
                        {
                            BookingId = 10,
                            BookingDate = new DateOnly(2024, 8, 25),
                            BookingTime = (short)19,
                            Cdate = new DateTime(2024, 8, 25, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7025),
                            CourseId = 10,
                            MemberId = 10,
                            TempShoppingCartId = 10,
                            Udate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7026)
                        },
                        new
                        {
                            BookingId = 11,
                            BookingDate = new DateOnly(2024, 8, 26),
                            BookingTime = (short)20,
                            Cdate = new DateTime(2024, 8, 26, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7030),
                            CourseId = 11,
                            MemberId = 11,
                            TempShoppingCartId = 11,
                            Udate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7031)
                        },
                        new
                        {
                            BookingId = 12,
                            BookingDate = new DateOnly(2024, 8, 27),
                            BookingTime = (short)21,
                            Cdate = new DateTime(2024, 8, 27, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7038),
                            CourseId = 12,
                            MemberId = 12,
                            TempShoppingCartId = 12,
                            Udate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7039)
                        },
                        new
                        {
                            BookingId = 13,
                            BookingDate = new DateOnly(2024, 8, 28),
                            BookingTime = (short)22,
                            Cdate = new DateTime(2024, 8, 28, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7044),
                            CourseId = 13,
                            MemberId = 13,
                            TempShoppingCartId = 13,
                            Udate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7045)
                        },
                        new
                        {
                            BookingId = 14,
                            BookingDate = new DateOnly(2024, 8, 29),
                            BookingTime = (short)23,
                            Cdate = new DateTime(2024, 8, 29, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7049),
                            CourseId = 14,
                            MemberId = 14,
                            TempShoppingCartId = 14,
                            Udate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7050)
                        },
                        new
                        {
                            BookingId = 15,
                            BookingDate = new DateOnly(2024, 8, 30),
                            BookingTime = (short)24,
                            Cdate = new DateTime(2024, 8, 30, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7054),
                            CourseId = 15,
                            MemberId = 15,
                            TempShoppingCartId = 15,
                            Udate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7055)
                        },
                        new
                        {
                            BookingId = 16,
                            BookingDate = new DateOnly(2024, 8, 31),
                            BookingTime = (short)25,
                            Cdate = new DateTime(2024, 8, 31, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7060),
                            CourseId = 16,
                            MemberId = 16,
                            TempShoppingCartId = 16,
                            Udate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7060)
                        },
                        new
                        {
                            BookingId = 17,
                            BookingDate = new DateOnly(2024, 9, 1),
                            BookingTime = (short)26,
                            Cdate = new DateTime(2024, 9, 1, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7165),
                            CourseId = 17,
                            MemberId = 17,
                            TempShoppingCartId = 17,
                            Udate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7166)
                        },
                        new
                        {
                            BookingId = 18,
                            BookingDate = new DateOnly(2024, 9, 2),
                            BookingTime = (short)27,
                            Cdate = new DateTime(2024, 9, 2, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7171),
                            CourseId = 18,
                            MemberId = 18,
                            TempShoppingCartId = 18,
                            Udate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7174)
                        },
                        new
                        {
                            BookingId = 19,
                            BookingDate = new DateOnly(2024, 9, 3),
                            BookingTime = (short)28,
                            Cdate = new DateTime(2024, 9, 3, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7179),
                            CourseId = 19,
                            MemberId = 19,
                            TempShoppingCartId = 19,
                            Udate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7180)
                        },
                        new
                        {
                            BookingId = 20,
                            BookingDate = new DateOnly(2024, 9, 4),
                            BookingTime = (short)29,
                            Cdate = new DateTime(2024, 9, 4, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7185),
                            CourseId = 20,
                            MemberId = 20,
                            TempShoppingCartId = 20,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7186)
                        });
                });

            modelBuilder.Entity("Web.Entities.TutorTimeSlot", b =>
                {
                    b.Property<int>("TutorTimeSlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("教師可預約Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TutorTimeSlotId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int>("CourseHourId")
                        .HasColumnType("int")
                        .HasComment("開課時間");

                    b.Property<int>("TutorId")
                        .HasColumnType("int")
                        .HasColumnName("TutorID")
                        .HasComment("老師Id");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("修改時間");

                    b.Property<int>("Weekday")
                        .HasColumnType("int")
                        .HasComment("開課星期");

                    b.HasKey("TutorTimeSlotId")
                        .HasName("PK__TutorTim__E709EE17B13CB862");

                    b.HasIndex(new[] { "CourseHourId" }, "IX_TutorTimeSlots_CourseHourId");

                    b.HasIndex(new[] { "TutorId" }, "IX_TutorTimeSlots_TutorID");

                    b.ToTable("TutorTimeSlots");

                    b.HasData(
                        new
                        {
                            TutorTimeSlotId = 1,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7234),
                            CourseHourId = 1,
                            TutorId = 1,
                            Udate = new DateTime(2024, 9, 6, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7236),
                            Weekday = 1
                        },
                        new
                        {
                            TutorTimeSlotId = 2,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7238),
                            CourseHourId = 2,
                            TutorId = 2,
                            Udate = new DateTime(2024, 9, 7, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7239),
                            Weekday = 2
                        },
                        new
                        {
                            TutorTimeSlotId = 3,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7242),
                            CourseHourId = 3,
                            TutorId = 3,
                            Udate = new DateTime(2024, 9, 8, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7243),
                            Weekday = 3
                        },
                        new
                        {
                            TutorTimeSlotId = 4,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7245),
                            CourseHourId = 4,
                            TutorId = 4,
                            Udate = new DateTime(2024, 9, 9, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7246),
                            Weekday = 4
                        },
                        new
                        {
                            TutorTimeSlotId = 5,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7248),
                            CourseHourId = 5,
                            TutorId = 5,
                            Udate = new DateTime(2024, 9, 10, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7249),
                            Weekday = 5
                        },
                        new
                        {
                            TutorTimeSlotId = 6,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7251),
                            CourseHourId = 6,
                            TutorId = 6,
                            Udate = new DateTime(2024, 9, 11, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7252),
                            Weekday = 6
                        },
                        new
                        {
                            TutorTimeSlotId = 7,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7254),
                            CourseHourId = 7,
                            TutorId = 7,
                            Udate = new DateTime(2024, 9, 12, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7255),
                            Weekday = 7
                        },
                        new
                        {
                            TutorTimeSlotId = 8,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7261),
                            CourseHourId = 8,
                            TutorId = 8,
                            Udate = new DateTime(2024, 9, 13, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7262),
                            Weekday = 1
                        },
                        new
                        {
                            TutorTimeSlotId = 9,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7264),
                            CourseHourId = 9,
                            TutorId = 9,
                            Udate = new DateTime(2024, 9, 14, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7265),
                            Weekday = 2
                        },
                        new
                        {
                            TutorTimeSlotId = 10,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7267),
                            CourseHourId = 10,
                            TutorId = 10,
                            Udate = new DateTime(2024, 9, 15, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7268),
                            Weekday = 3
                        },
                        new
                        {
                            TutorTimeSlotId = 11,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7273),
                            CourseHourId = 11,
                            TutorId = 11,
                            Udate = new DateTime(2024, 9, 16, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7274),
                            Weekday = 4
                        },
                        new
                        {
                            TutorTimeSlotId = 12,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7276),
                            CourseHourId = 12,
                            TutorId = 12,
                            Udate = new DateTime(2024, 9, 17, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7277),
                            Weekday = 5
                        },
                        new
                        {
                            TutorTimeSlotId = 13,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7279),
                            CourseHourId = 13,
                            TutorId = 13,
                            Udate = new DateTime(2024, 9, 18, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7280),
                            Weekday = 6
                        },
                        new
                        {
                            TutorTimeSlotId = 14,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7285),
                            CourseHourId = 14,
                            TutorId = 14,
                            Udate = new DateTime(2024, 9, 19, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7286),
                            Weekday = 7
                        },
                        new
                        {
                            TutorTimeSlotId = 15,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7288),
                            CourseHourId = 15,
                            TutorId = 15,
                            Udate = new DateTime(2024, 9, 20, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7289),
                            Weekday = 1
                        },
                        new
                        {
                            TutorTimeSlotId = 16,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7291),
                            CourseHourId = 16,
                            TutorId = 16,
                            Udate = new DateTime(2024, 9, 21, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7291),
                            Weekday = 2
                        },
                        new
                        {
                            TutorTimeSlotId = 17,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7294),
                            CourseHourId = 17,
                            TutorId = 17,
                            Udate = new DateTime(2024, 9, 22, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7294),
                            Weekday = 3
                        },
                        new
                        {
                            TutorTimeSlotId = 18,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7297),
                            CourseHourId = 18,
                            TutorId = 18,
                            Udate = new DateTime(2024, 9, 23, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7297),
                            Weekday = 4
                        },
                        new
                        {
                            TutorTimeSlotId = 19,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7300),
                            CourseHourId = 19,
                            TutorId = 19,
                            Udate = new DateTime(2024, 9, 24, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7300),
                            Weekday = 5
                        },
                        new
                        {
                            TutorTimeSlotId = 20,
                            Cdate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7304),
                            CourseHourId = 20,
                            TutorId = 20,
                            Udate = new DateTime(2024, 9, 25, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7305),
                            Weekday = 6
                        });
                });

            modelBuilder.Entity("Web.Entities.WatchList", b =>
                {
                    b.Property<int>("WatchListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("關注Id");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasComment("關注的課程");

                    b.Property<int?>("FollowerId")
                        .HasColumnType("int")
                        .HasComment("送出關注的人");

                    b.HasKey("WatchListId");

                    b.HasIndex("CourseId");

                    b.ToTable("WatchLists");

                    b.HasData(
                        new
                        {
                            WatchListId = 1,
                            CourseId = 1,
                            FollowerId = 1
                        },
                        new
                        {
                            WatchListId = 2,
                            CourseId = 2,
                            FollowerId = 2
                        },
                        new
                        {
                            WatchListId = 3,
                            CourseId = 3,
                            FollowerId = 3
                        },
                        new
                        {
                            WatchListId = 4,
                            CourseId = 4,
                            FollowerId = 4
                        },
                        new
                        {
                            WatchListId = 5,
                            CourseId = 5,
                            FollowerId = 5
                        },
                        new
                        {
                            WatchListId = 6,
                            CourseId = 6,
                            FollowerId = 6
                        },
                        new
                        {
                            WatchListId = 7,
                            CourseId = 7,
                            FollowerId = 7
                        },
                        new
                        {
                            WatchListId = 8,
                            CourseId = 8,
                            FollowerId = 8
                        },
                        new
                        {
                            WatchListId = 9,
                            CourseId = 9,
                            FollowerId = 9
                        },
                        new
                        {
                            WatchListId = 10,
                            CourseId = 10,
                            FollowerId = 10
                        },
                        new
                        {
                            WatchListId = 11,
                            CourseId = 11,
                            FollowerId = 11
                        },
                        new
                        {
                            WatchListId = 12,
                            CourseId = 12,
                            FollowerId = 12
                        },
                        new
                        {
                            WatchListId = 13,
                            CourseId = 13,
                            FollowerId = 13
                        },
                        new
                        {
                            WatchListId = 14,
                            CourseId = 14,
                            FollowerId = 14
                        },
                        new
                        {
                            WatchListId = 15,
                            CourseId = 15,
                            FollowerId = 15
                        },
                        new
                        {
                            WatchListId = 16,
                            CourseId = 16,
                            FollowerId = 16
                        },
                        new
                        {
                            WatchListId = 17,
                            CourseId = 17,
                            FollowerId = 17
                        },
                        new
                        {
                            WatchListId = 18,
                            CourseId = 18,
                            FollowerId = 18
                        },
                        new
                        {
                            WatchListId = 19,
                            CourseId = 19,
                            FollowerId = 19
                        },
                        new
                        {
                            WatchListId = 20,
                            CourseId = 20,
                            FollowerId = 20
                        });
                });

            modelBuilder.Entity("Web.Entities.WorkExperience", b =>
                {
                    b.Property<int>("WorkExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("工作經驗Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkExperienceId"));

                    b.Property<DateTime>("Cdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CDate")
                        .HasComment("建立時間");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("會員Id");

                    b.Property<DateTime?>("Udate")
                        .HasColumnType("datetime")
                        .HasColumnName("UDate")
                        .HasComment("修改時間");

                    b.Property<DateTime>("WorkEndDate")
                        .HasColumnType("datetime")
                        .HasComment("工作結束日");

                    b.Property<string>("WorkExperienceFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("工作經驗檔案路徑");

                    b.Property<string>("WorkName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("工作經驗名稱");

                    b.Property<DateTime>("WorkStartDate")
                        .HasColumnType("datetime")
                        .HasComment("工作起始日");

                    b.HasKey("WorkExperienceId")
                        .HasName("PK__WorkExpe__55A2B889201583D4");

                    b.HasIndex(new[] { "MemberId" }, "IX_WorkExperiences_MemberId");

                    b.ToTable("WorkExperiences");

                    b.HasData(
                        new
                        {
                            WorkExperienceId = 1,
                            Cdate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7353),
                            MemberId = 1,
                            Udate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7354),
                            WorkEndDate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7351),
                            WorkExperienceFile = "https://example.com/resume/software_engineer_1.pdf",
                            WorkName = "Software Engineer",
                            WorkStartDate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7350)
                        },
                        new
                        {
                            WorkExperienceId = 2,
                            Cdate = new DateTime(2020, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7362),
                            MemberId = 2,
                            Udate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7363),
                            WorkEndDate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7361),
                            WorkExperienceFile = "https://example.com/resume/data_analyst_2.pdf",
                            WorkName = "Data Analyst",
                            WorkStartDate = new DateTime(2020, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7360)
                        },
                        new
                        {
                            WorkExperienceId = 3,
                            Cdate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7367),
                            MemberId = 3,
                            Udate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7368),
                            WorkEndDate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7366),
                            WorkExperienceFile = "https://example.com/resume/web_developer_3.pdf",
                            WorkName = "Web Developer",
                            WorkStartDate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7365)
                        },
                        new
                        {
                            WorkExperienceId = 4,
                            Cdate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7378),
                            MemberId = 4,
                            Udate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7379),
                            WorkEndDate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7377),
                            WorkExperienceFile = "https://example.com/resume/db_admin_4.pdf",
                            WorkName = "Database Administrator",
                            WorkStartDate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7374)
                        },
                        new
                        {
                            WorkExperienceId = 5,
                            Cdate = new DateTime(2018, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7384),
                            MemberId = 5,
                            Udate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7385),
                            WorkEndDate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7383),
                            WorkExperienceFile = "https://example.com/resume/network_engineer_5.pdf",
                            WorkName = "Network Engineer",
                            WorkStartDate = new DateTime(2018, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7382)
                        },
                        new
                        {
                            WorkExperienceId = 6,
                            Cdate = new DateTime(2017, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7391),
                            MemberId = 6,
                            Udate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7393),
                            WorkEndDate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7390),
                            WorkExperienceFile = "https://example.com/resume/system_analyst_6.pdf",
                            WorkName = "System Analyst",
                            WorkStartDate = new DateTime(2017, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7387)
                        },
                        new
                        {
                            WorkExperienceId = 7,
                            Cdate = new DateTime(2016, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7402),
                            MemberId = 7,
                            Udate = new DateTime(2020, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7403),
                            WorkEndDate = new DateTime(2020, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7401),
                            WorkExperienceFile = "https://example.com/resume/project_manager_7.pdf",
                            WorkName = "Project Manager",
                            WorkStartDate = new DateTime(2016, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7398)
                        },
                        new
                        {
                            WorkExperienceId = 8,
                            Cdate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7408),
                            MemberId = 8,
                            Udate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7409),
                            WorkEndDate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7407),
                            WorkExperienceFile = "https://example.com/resume/ui_ux_designer_8.pdf",
                            WorkName = "UI/UX Designer",
                            WorkStartDate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7406)
                        },
                        new
                        {
                            WorkExperienceId = 9,
                            Cdate = new DateTime(2020, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7413),
                            MemberId = 9,
                            Udate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7415),
                            WorkEndDate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7412),
                            WorkExperienceFile = "https://example.com/resume/devops_engineer_9.pdf",
                            WorkName = "DevOps Engineer",
                            WorkStartDate = new DateTime(2020, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7411)
                        },
                        new
                        {
                            WorkExperienceId = 10,
                            Cdate = new DateTime(2018, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7419),
                            MemberId = 10,
                            Udate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7420),
                            WorkEndDate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7418),
                            WorkExperienceFile = "https://example.com/resume/software_architect_10.pdf",
                            WorkName = "Software Architect",
                            WorkStartDate = new DateTime(2018, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7417)
                        },
                        new
                        {
                            WorkExperienceId = 11,
                            Cdate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7424),
                            MemberId = 11,
                            Udate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7425),
                            WorkEndDate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7423),
                            WorkExperienceFile = "https://example.com/resume/business_analyst_11.pdf",
                            WorkName = "Business Analyst",
                            WorkStartDate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7422)
                        },
                        new
                        {
                            WorkExperienceId = 12,
                            Cdate = new DateTime(2018, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7429),
                            MemberId = 12,
                            Udate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7430),
                            WorkEndDate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7428),
                            WorkExperienceFile = "https://example.com/resume/product_manager_12.pdf",
                            WorkName = "Product Manager",
                            WorkStartDate = new DateTime(2018, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7427)
                        },
                        new
                        {
                            WorkExperienceId = 13,
                            Cdate = new DateTime(2017, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7435),
                            MemberId = 13,
                            Udate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7436),
                            WorkEndDate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7434),
                            WorkExperienceFile = "https://example.com/resume/marketing_specialist_13.pdf",
                            WorkName = "Marketing Specialist",
                            WorkStartDate = new DateTime(2017, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7433)
                        },
                        new
                        {
                            WorkExperienceId = 14,
                            Cdate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7443),
                            MemberId = 14,
                            Udate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7444),
                            WorkEndDate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7442),
                            WorkExperienceFile = "https://example.com/resume/seo_specialist_14.pdf",
                            WorkName = "SEO Specialist",
                            WorkStartDate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7441)
                        },
                        new
                        {
                            WorkExperienceId = 15,
                            Cdate = new DateTime(2018, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7456),
                            MemberId = 15,
                            Udate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7457),
                            WorkEndDate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7455),
                            WorkExperienceFile = "https://example.com/resume/content_manager_15.pdf",
                            WorkName = "Content Manager",
                            WorkStartDate = new DateTime(2018, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7451)
                        },
                        new
                        {
                            WorkExperienceId = 16,
                            Cdate = new DateTime(2020, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7465),
                            MemberId = 16,
                            Udate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7467),
                            WorkEndDate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7465),
                            WorkExperienceFile = "https://example.com/resume/cybersecurity_specialist_16.pdf",
                            WorkName = "Cybersecurity Specialist",
                            WorkStartDate = new DateTime(2020, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7462)
                        },
                        new
                        {
                            WorkExperienceId = 17,
                            Cdate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7471),
                            MemberId = 17,
                            Udate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7472),
                            WorkEndDate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7470),
                            WorkExperienceFile = "https://example.com/resume/ai_engineer_17.pdf",
                            WorkName = "AI Engineer",
                            WorkStartDate = new DateTime(2021, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7469)
                        },
                        new
                        {
                            WorkExperienceId = 18,
                            Cdate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7476),
                            MemberId = 18,
                            Udate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7477),
                            WorkEndDate = new DateTime(2024, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7475),
                            WorkExperienceFile = "https://example.com/resume/ml_engineer_18.pdf",
                            WorkName = "Machine Learning Engineer",
                            WorkStartDate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7474)
                        },
                        new
                        {
                            WorkExperienceId = 19,
                            Cdate = new DateTime(2020, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7481),
                            MemberId = 19,
                            Udate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7482),
                            WorkEndDate = new DateTime(2023, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7480),
                            WorkExperienceFile = "https://example.com/resume/blockchain_developer_19.pdf",
                            WorkName = "Blockchain Developer",
                            WorkStartDate = new DateTime(2020, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7479)
                        },
                        new
                        {
                            WorkExperienceId = 20,
                            Cdate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7490),
                            MemberId = 20,
                            Udate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7491),
                            WorkEndDate = new DateTime(2022, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7488),
                            WorkExperienceFile = "https://example.com/resume/full_stack_developer_20.pdf",
                            WorkName = "Full Stack Developer",
                            WorkStartDate = new DateTime(2019, 9, 5, 8, 12, 19, 127, DateTimeKind.Local).AddTicks(7487)
                        });
                });

            modelBuilder.Entity("Web.Entities.ApplyList", b =>
                {
                    b.HasOne("Web.Entities.Member", "Member")
                        .WithMany("ApplyLists")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__ApplyList__Membe__59FA5E80");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Web.Entities.Booking", b =>
                {
                    b.HasOne("Web.Entities.Course", "Course")
                        .WithMany("Bookings")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__Course__5441852A");

                    b.HasOne("Web.Entities.Member", "Student")
                        .WithMany("Bookings")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__Member__534D60F1");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Web.Entities.Course", b =>
                {
                    b.HasOne("Web.Entities.CourseCategory", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Courses_CourseCategories");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Web.Entities.CourseImage", b =>
                {
                    b.HasOne("Web.Entities.Course", "Course")
                        .WithMany("CourseImages")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseIma__Cours__52593CB8");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Web.Entities.CourseSubject", b =>
                {
                    b.HasOne("Web.Entities.CourseCategory", "CourseCategory")
                        .WithMany("CourseSubjects")
                        .HasForeignKey("CourseCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseSub__Cours__59063A47");

                    b.Navigation("CourseCategory");
                });

            modelBuilder.Entity("Web.Entities.Member", b =>
                {
                    b.HasOne("Web.Entities.Education", "Education")
                        .WithMany("Members")
                        .HasForeignKey("EducationId")
                        .HasConstraintName("FK__Members__Educati__49C3F6B7");

                    b.HasOne("Web.Entities.Nation", "Nation")
                        .WithMany("Members")
                        .HasForeignKey("NationId")
                        .HasConstraintName("FK__Members__NationI__48CFD27E");

                    b.Navigation("Education");

                    b.Navigation("Nation");
                });

            modelBuilder.Entity("Web.Entities.MemberCoupon", b =>
                {
                    b.HasOne("Web.Entities.Coupon", "Coupon")
                        .WithMany()
                        .HasForeignKey("CouponId")
                        .IsRequired()
                        .HasConstraintName("FK_MemberCoupons_Coupons");

                    b.HasOne("Web.Entities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_MemberCoupons_Members");

                    b.Navigation("Coupon");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Web.Entities.MemberPreference", b =>
                {
                    b.HasOne("Web.Entities.Member", "Member")
                        .WithMany("MemberPreferences")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__MemberPre__Membe__5AEE82B9");

                    b.HasOne("Web.Entities.CourseSubject", "Subjec")
                        .WithMany("MemberPreferences")
                        .HasForeignKey("SubjecId")
                        .IsRequired()
                        .HasConstraintName("FK__MemberPre__Subje__52593CB8");

                    b.Navigation("Member");

                    b.Navigation("Subjec");
                });

            modelBuilder.Entity("Web.Entities.Order", b =>
                {
                    b.HasOne("Web.Entities.Member", "Member")
                        .WithMany("Orders")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__MemberId__4BAC3F29");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Web.Entities.OrderDetail", b =>
                {
                    b.HasOne("Web.Entities.Course", "Course")
                        .WithMany("OrderDetails")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Cours__4E88ABD4");

                    b.HasOne("Web.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__4D94879B");

                    b.Navigation("Course");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Web.Entities.ProfessionalLicense", b =>
                {
                    b.HasOne("Web.Entities.Member", "Member")
                        .WithMany("ProfessionalLicenses")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__Professio__Membe__5165187F");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Web.Entities.Review", b =>
                {
                    b.HasOne("Web.Entities.Course", "Course")
                        .WithMany("Reviews")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__CourseI__5070F446");

                    b.HasOne("Web.Entities.Member", "Student")
                        .WithMany("Reviews")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__MemberI__4F7CD00D");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Web.Entities.ShoppingCart", b =>
                {
                    b.HasOne("Web.Entities.Course", "Course")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_ShoppingCarts_Courses");

                    b.HasOne("Web.Entities.Member", "Member")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_ShoppingCarts_Members");

                    b.Navigation("Course");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Web.Entities.ShoppingCartBooking", b =>
                {
                    b.HasOne("Web.Entities.ShoppingCart", "TempShoppingCart")
                        .WithMany("ShoppingCartBookings")
                        .HasForeignKey("TempShoppingCartId")
                        .HasConstraintName("FK__TempShopp__TempS__60A75C0F");

                    b.Navigation("TempShoppingCart");
                });

            modelBuilder.Entity("Web.Entities.TutorTimeSlot", b =>
                {
                    b.HasOne("Web.Entities.CourseHour", "CourseHour")
                        .WithMany("TutorTimeSlots")
                        .HasForeignKey("CourseHourId")
                        .IsRequired()
                        .HasConstraintName("FK__TutorTime__Cours__5EBF139D");

                    b.HasOne("Web.Entities.Member", "Tutor")
                        .WithMany("TutorTimeSlots")
                        .HasForeignKey("TutorId")
                        .IsRequired()
                        .HasConstraintName("FK__TutorTime__Membe__5535A963");

                    b.Navigation("CourseHour");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Web.Entities.WatchList", b =>
                {
                    b.HasOne("Web.Entities.Course", "Course")
                        .WithMany("WatchLists")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_WatchLists_Courses");

                    b.HasOne("Web.Entities.Member", "WatchListNavigation")
                        .WithOne("WatchList")
                        .HasForeignKey("Web.Entities.WatchList", "WatchListId")
                        .IsRequired()
                        .HasConstraintName("FK_WatchLists_WatchLists");

                    b.Navigation("Course");

                    b.Navigation("WatchListNavigation");
                });

            modelBuilder.Entity("Web.Entities.WorkExperience", b =>
                {
                    b.HasOne("Web.Entities.Member", "Member")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__WorkExper__Membe__4AB81AF0");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Web.Entities.Course", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("CourseImages");

                    b.Navigation("OrderDetails");

                    b.Navigation("Reviews");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("WatchLists");
                });

            modelBuilder.Entity("Web.Entities.CourseCategory", b =>
                {
                    b.Navigation("CourseSubjects");

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Web.Entities.CourseHour", b =>
                {
                    b.Navigation("TutorTimeSlots");
                });

            modelBuilder.Entity("Web.Entities.CourseSubject", b =>
                {
                    b.Navigation("MemberPreferences");
                });

            modelBuilder.Entity("Web.Entities.Education", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Web.Entities.Member", b =>
                {
                    b.Navigation("ApplyLists");

                    b.Navigation("Bookings");

                    b.Navigation("MemberPreferences");

                    b.Navigation("Orders");

                    b.Navigation("ProfessionalLicenses");

                    b.Navigation("Reviews");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("TutorTimeSlots");

                    b.Navigation("WatchList");

                    b.Navigation("WorkExperiences");
                });

            modelBuilder.Entity("Web.Entities.Nation", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Web.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Web.Entities.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
